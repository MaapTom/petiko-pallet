import { defineComponent as m, inject as a, computed as r, openBlock as e, createElementBlock as s, mergeProps as u, unref as t, renderSlot as y, createCommentVNode as Z, createElementVNode as o } from "vue";
const M = ["width", "height", "fill", "transform"], f = { key: 0 }, A = /* @__PURE__ */ o("path", { d: "M232,36V176a12,12,0,0,1-24,0V48H80a12,12,0,0,1,0-24H220A12,12,0,0,1,232,36ZM192,76V216a12,12,0,0,1-12,12H40a12,12,0,0,1-12-12V76A12,12,0,0,1,40,64H180A12,12,0,0,1,192,76ZM168,88H52V204H168Z" }, null, -1), w = [
  A
], k = { key: 1 }, x = /* @__PURE__ */ o("g", { opacity: "0.2" }, [
  /* @__PURE__ */ o("rect", {
    x: "39.9",
    y: "72",
    width: "144",
    height: "144"
  })
], -1), S = /* @__PURE__ */ o("path", { d: "M216,32H71.9a8,8,0,0,0,0,16H208V184a8,8,0,0,0,16,0V40A8,8,0,0,0,216,32Z" }, null, -1), v = /* @__PURE__ */ o("path", { d: "M184,64H39.9a8,8,0,0,0-8,8V216a8,8,0,0,0,8,8H184a8,8,0,0,0,8-8V72A8,8,0,0,0,184,64Zm-8,144H47.9V80H176Z" }, null, -1), C = [
  x,
  S,
  v
], z = { key: 2 }, B = /* @__PURE__ */ o("path", { d: "M224,40V184a8,8,0,0,1-16,0V48H72a8,8,0,0,1,0-16H216A8,8,0,0,1,224,40ZM184,64H40a8,8,0,0,0-8,8V216a8,8,0,0,0,8,8H184a8,8,0,0,0,8-8V72A8,8,0,0,0,184,64Z" }, null, -1), N = [
  B
], b = { key: 3 }, E = /* @__PURE__ */ o("path", { d: "M222,40V184a6,6,0,0,1-12,0V46H72a6,6,0,0,1,0-12H216A6,6,0,0,1,222,40ZM190,72V216a6,6,0,0,1-6,6H40a6,6,0,0,1-6-6V72a6,6,0,0,1,6-6H184A6,6,0,0,1,190,72Zm-12,6H46V210H178Z" }, null, -1), P = [
  E
], W = { key: 4 }, $ = /* @__PURE__ */ o("path", { d: "M224,40V184a8,8,0,0,1-16,0V48H72a8,8,0,0,1,0-16H216A8,8,0,0,1,224,40ZM192,72V216a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V72a8,8,0,0,1,8-8H184A8,8,0,0,1,192,72Zm-16,8H48V208H176Z" }, null, -1), j = [
  $
], q = { key: 5 }, D = /* @__PURE__ */ o("path", { d: "M220,40V184a4,4,0,0,1-8,0V44H72a4,4,0,0,1,0-8H216A4,4,0,0,1,220,40ZM188,72V216a4,4,0,0,1-4,4H40a4,4,0,0,1-4-4V72a4,4,0,0,1,4-4H184A4,4,0,0,1,188,72Zm-8,4H44V212H180Z" }, null, -1), F = [
  D
], G = {
  name: "PhCopySimple"
}, K = /* @__PURE__ */ m({
  ...G,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(l) {
    const i = l, _ = a("weight", "regular"), h = a("size", "1em"), H = a("color", "currentColor"), V = a("mirrored", !1), n = r(() => i.weight ?? _), d = r(() => i.size ?? h), p = r(() => i.color ?? H), g = r(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : V ? "scale(-1, 1)" : void 0);
    return (c, I) => (e(), s("svg", u({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(p),
      transform: t(g)
    }, c.$attrs), [
      y(c.$slots, "default"),
      t(n) === "bold" ? (e(), s("g", f, w)) : t(n) === "duotone" ? (e(), s("g", k, C)) : t(n) === "fill" ? (e(), s("g", z, N)) : t(n) === "light" ? (e(), s("g", b, P)) : t(n) === "regular" ? (e(), s("g", W, j)) : t(n) === "thin" ? (e(), s("g", q, F)) : Z("", !0)
    ], 16, M));
  }
});
export {
  K as default
};
