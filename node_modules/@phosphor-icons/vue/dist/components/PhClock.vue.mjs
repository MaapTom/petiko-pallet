import { defineComponent as Z, inject as r, computed as c, openBlock as e, createElementBlock as s, mergeProps as y, unref as t, renderSlot as A, createCommentVNode as f, createElementVNode as o } from "vue";
const v = ["width", "height", "fill", "transform"], w = { key: 0 }, k = /* @__PURE__ */ o("path", { d: "M128,20A108,108,0,1,0,236,128,108.1,108.1,0,0,0,128,20Zm0,192a84,84,0,1,1,84-84A84.1,84.1,0,0,1,128,212Zm68-84a12,12,0,0,1-12,12H128a12,12,0,0,1-12-12V72a12,12,0,0,1,24,0v44h44A12,12,0,0,1,196,128Z" }, null, -1), M = [
  k
], V = { key: 1 }, x = /* @__PURE__ */ o("g", { opacity: "0.2" }, [
  /* @__PURE__ */ o("circle", {
    cx: "128",
    cy: "128",
    r: "96"
  })
], -1), C = /* @__PURE__ */ o("path", { d: "M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm0,192a88,88,0,1,1,88-88A88.1,88.1,0,0,1,128,216Z" }, null, -1), H = /* @__PURE__ */ o("path", { d: "M184,120H136V72a8,8,0,0,0-16,0v56a8,8,0,0,0,8,8h56a8,8,0,0,0,0-16Z" }, null, -1), S = [
  x,
  C,
  H
], z = { key: 2 }, B = /* @__PURE__ */ o("path", { d: "M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm56,112H128a8,8,0,0,1-8-8V72a8,8,0,0,1,16,0v48h48a8,8,0,0,1,0,16Z" }, null, -1), N = [
  B
], b = { key: 3 }, E = /* @__PURE__ */ o("path", { d: "M128,230A102,102,0,1,1,230,128,102.2,102.2,0,0,1,128,230Zm0-192a90,90,0,1,0,90,90A90.1,90.1,0,0,0,128,38Zm62,90a6,6,0,0,0-6-6H134V72a6,6,0,0,0-12,0v56a6,6,0,0,0,6,6h56A6,6,0,0,0,190,128Z" }, null, -1), P = [
  E
], W = { key: 4 }, $ = /* @__PURE__ */ o("path", { d: "M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm0,192a88,88,0,1,1,88-88A88.1,88.1,0,0,1,128,216Zm64-88a8,8,0,0,1-8,8H128a8,8,0,0,1-8-8V72a8,8,0,0,1,16,0v48h48A8,8,0,0,1,192,128Z" }, null, -1), j = [
  $
], q = { key: 5 }, D = /* @__PURE__ */ o("path", { d: "M128,28A100,100,0,1,0,228,128,100.2,100.2,0,0,0,128,28Zm0,192a92,92,0,1,1,92-92A92.1,92.1,0,0,1,128,220Zm60-92a4,4,0,0,1-4,4H128a4,4,0,0,1-4-4V72a4,4,0,0,1,8,0v52h52A4,4,0,0,1,188,128Z" }, null, -1), F = [
  D
], G = {
  name: "PhClock"
}, K = /* @__PURE__ */ Z({
  ...G,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(h) {
    const i = h, l = r("weight", "regular"), _ = r("size", "1em"), m = r("color", "currentColor"), p = r("mirrored", !1), n = c(() => i.weight ?? l), a = c(() => i.size ?? _), g = c(() => i.color ?? m), u = c(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (d, I) => (e(), s("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(g),
      transform: t(u)
    }, d.$attrs), [
      A(d.$slots, "default"),
      t(n) === "bold" ? (e(), s("g", w, M)) : t(n) === "duotone" ? (e(), s("g", V, S)) : t(n) === "fill" ? (e(), s("g", z, N)) : t(n) === "light" ? (e(), s("g", b, P)) : t(n) === "regular" ? (e(), s("g", W, j)) : t(n) === "thin" ? (e(), s("g", q, F)) : f("", !0)
    ], 16, v));
  }
});
export {
  K as default
};
