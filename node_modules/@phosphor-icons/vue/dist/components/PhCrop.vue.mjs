import { defineComponent as m, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as u, unref as t, renderSlot as v, createCommentVNode as y, createElementVNode as s } from "vue";
const M = ["width", "height", "fill", "transform"], f = { key: 0 }, Z = /* @__PURE__ */ s("path", { d: "M244,192a12,12,0,0,1-12,12H204v28a12,12,0,0,1-24,0V204H64a12,12,0,0,1-12-12V76H24a12,12,0,0,1,0-24H52V24a12,12,0,0,1,24,0V180H232A12,12,0,0,1,244,192ZM104,76h76v76a12,12,0,0,0,24,0V64a12,12,0,0,0-12-12H104a12,12,0,0,0,0,24Z" }, null, -1), w = [
  Z
], k = { key: 1 }, x = /* @__PURE__ */ s("path", { d: "M240,192a8,8,0,0,1-8,8H200v32a8,8,0,0,1-16,0V200H64a8,8,0,0,1-8-8V72H24a8,8,0,0,1,0-16H56V24a8,8,0,0,1,16,0V184H232A8,8,0,0,1,240,192ZM96,72h88v88a8,8,0,0,0,16,0V64a8,8,0,0,0-8-8H96a8,8,0,0,0,0,16Z" }, null, -1), A = [
  x
], C = { key: 2 }, S = /* @__PURE__ */ s("path", { d: "M88,64a8,8,0,0,1,8-8h96a8,8,0,0,1,8,8v96a8,8,0,0,1-16,0V72H96A8,8,0,0,1,88,64ZM232,184H72V24a8,8,0,0,0-16,0V56H24a8,8,0,0,0,0,16H56V192a8,8,0,0,0,8,8H184v32a8,8,0,0,0,16,0V200h32a8,8,0,0,0,0-16Z" }, null, -1), z = [
  S
], B = { key: 3 }, N = /* @__PURE__ */ s("path", { d: "M238,192a6,6,0,0,1-6,6H198v34a6,6,0,0,1-12,0V198H64a6,6,0,0,1-6-6V70H24a6,6,0,0,1,0-12H58V24a6,6,0,0,1,12,0V186H232A6,6,0,0,1,238,192ZM96,70h90v90a6,6,0,0,0,12,0V64a6,6,0,0,0-6-6H96a6,6,0,0,0,0,12Z" }, null, -1), b = [
  N
], E = { key: 4 }, P = /* @__PURE__ */ s("path", { d: "M240,192a8,8,0,0,1-8,8H200v32a8,8,0,0,1-16,0V200H64a8,8,0,0,1-8-8V72H24a8,8,0,0,1,0-16H56V24a8,8,0,0,1,16,0V184H232A8,8,0,0,1,240,192ZM96,72h88v88a8,8,0,0,0,16,0V64a8,8,0,0,0-8-8H96a8,8,0,0,0,0,16Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ s("path", { d: "M236,192a4,4,0,0,1-4,4H196v36a4,4,0,0,1-8,0V196H64a4,4,0,0,1-4-4V68H24a4,4,0,0,1,0-8H60V24a4,4,0,0,1,8,0V188H232A4,4,0,0,1,236,192ZM96,68h92v92a4,4,0,0,0,8,0V64a4,4,0,0,0-4-4H96a4,4,0,0,0,0,8Z" }, null, -1), q = [
  j
], D = {
  name: "PhCrop"
}, I = /* @__PURE__ */ m({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(h) {
    const n = h, l = i("weight", "regular"), _ = i("size", "1em"), H = i("color", "currentColor"), V = i("mirrored", !1), a = r(() => n.weight ?? l), d = r(() => n.size ?? _), p = r(() => n.color ?? H), g = r(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : V ? "scale(-1, 1)" : void 0);
    return (c, F) => (o(), e("svg", u({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(p),
      transform: t(g)
    }, c.$attrs), [
      v(c.$slots, "default"),
      t(a) === "bold" ? (o(), e("g", f, w)) : t(a) === "duotone" ? (o(), e("g", k, A)) : t(a) === "fill" ? (o(), e("g", C, z)) : t(a) === "light" ? (o(), e("g", B, b)) : t(a) === "regular" ? (o(), e("g", E, W)) : t(a) === "thin" ? (o(), e("g", $, q)) : y("", !0)
    ], 16, M));
  }
});
export {
  I as default
};
