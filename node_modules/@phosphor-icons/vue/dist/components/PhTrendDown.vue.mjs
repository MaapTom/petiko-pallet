import { defineComponent as L, inject as a, computed as i, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as f, createCommentVNode as v, createElementVNode as n } from "vue";
const w = ["width", "height", "fill", "transform"], k = { key: 0 }, M = /* @__PURE__ */ n("path", { d: "M244,136v64a12,12,0,0,1-12,12H168a12,12,0,0,1,0-24h35l-67-67-31.5,31.5a12,12,0,0,1-17,0l-72-72a12,12,0,0,1,17-17L96,127l31.5-31.5a12,12,0,0,1,17,0L220,171V136a12,12,0,0,1,24,0Z" }, null, -1), V = [
  M
], x = { key: 1 }, H = /* @__PURE__ */ n("path", { d: "M240,136v64a8,8,0,0,1-8,8H168a8,8,0,0,1,0-16h44.7L136,115.3l-34.3,34.4a8.1,8.1,0,0,1-11.4,0l-72-72A8.1,8.1,0,0,1,29.7,66.3L96,132.7l34.3-34.4a8.1,8.1,0,0,1,11.4,0L224,180.7V136a8,8,0,0,1,16,0Z" }, null, -1), S = [
  H
], Z = { key: 2 }, z = /* @__PURE__ */ n("path", { d: "M240,136v64a8,8,0,0,1-8,8H168a8.1,8.1,0,0,1-7.4-4.9,8.4,8.4,0,0,1,1.7-8.8L188.7,168,136,115.3l-34.3,34.4a8.1,8.1,0,0,1-11.4,0l-72-72A8.1,8.1,0,0,1,29.7,66.3L96,132.7l34.3-34.4a8.1,8.1,0,0,1,11.4,0L200,156.7l26.3-26.4a8.4,8.4,0,0,1,8.8-1.7A8,8,0,0,1,240,136Z" }, null, -1), C = [
  z
], A = { key: 3 }, B = /* @__PURE__ */ n("path", { d: "M238,136v64a6,6,0,0,1-6,6H168a6,6,0,0,1,0-12h49.5L136,112.5l-35.8,35.7a5.8,5.8,0,0,1-8.4,0l-72-72a5.9,5.9,0,1,1,8.4-8.4L96,135.5l35.8-35.7a5.8,5.8,0,0,1,8.4,0L226,185.5V136a6,6,0,0,1,12,0Z" }, null, -1), N = [
  B
], b = { key: 4 }, E = /* @__PURE__ */ n("path", { d: "M240,136v64a8,8,0,0,1-8,8H168a8,8,0,0,1,0-16h44.7L136,115.3l-34.3,34.4a8.1,8.1,0,0,1-11.4,0l-72-72A8.1,8.1,0,0,1,29.7,66.3L96,132.7l34.3-34.4a8.1,8.1,0,0,1,11.4,0L224,180.7V136a8,8,0,0,1,16,0Z" }, null, -1), P = [
  E
], W = { key: 5 }, $ = /* @__PURE__ */ n("path", { d: "M236,136v64a4,4,0,0,1-4,4H168a4,4,0,0,1,0-8h54.3L136,109.7,98.8,146.8a3.9,3.9,0,0,1-5.6,0l-72-72a4,4,0,0,1,5.6-5.6L96,138.3l37.2-37.1a3.9,3.9,0,0,1,5.6,0L228,190.3V136a4,4,0,0,1,8,0Z" }, null, -1), j = [
  $
], D = {
  name: "PhTrendDown"
}, F = /* @__PURE__ */ L({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const l = c, h = a("weight", "regular"), _ = a("size", "1em"), p = a("color", "currentColor"), g = a("mirrored", !1), s = i(() => l.weight ?? h), r = i(() => l.size ?? _), m = i(() => l.color ?? p), u = i(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, T) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(r),
      height: t(r),
      fill: t(m),
      transform: t(u)
    }, d.$attrs), [
      f(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", k, V)) : t(s) === "duotone" ? (o(), e("g", x, S)) : t(s) === "fill" ? (o(), e("g", Z, C)) : t(s) === "light" ? (o(), e("g", A, N)) : t(s) === "regular" ? (o(), e("g", b, P)) : t(s) === "thin" ? (o(), e("g", W, j)) : v("", !0)
    ], 16, w));
  }
});
export {
  F as default
};
