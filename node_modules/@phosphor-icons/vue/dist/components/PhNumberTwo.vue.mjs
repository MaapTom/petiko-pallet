import { defineComponent as A, inject as r, computed as l, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as f, createCommentVNode as w, createElementVNode as n } from "vue";
const k = ["width", "height", "fill", "transform"], M = { key: 0 }, H = /* @__PURE__ */ n("path", { d: "M188,224a12,12,0,0,1-12,12H80a12.6,12.6,0,0,1-3.8-.6,12,12,0,0,1-5.6-18.8L158,99.9A36,36,0,1,0,94.8,66a12,12,0,1,1-22.1-9.4,60,60,0,1,1,105,57l-.3.4L104,212h72A12,12,0,0,1,188,224Z" }, null, -1), L = [
  H
], v = { key: 1 }, x = /* @__PURE__ */ n("path", { d: "M184,224a8,8,0,0,1-8,8H80a7.3,7.3,0,0,1-2.5-.4A8,8,0,0,1,72,224a8,8,0,0,1,1.7-5l87.6-116.8A40,40,0,1,0,91.1,64.4a8,8,0,1,1-14.7-6.2,56,56,0,1,1,98,53.1c0,.1-.1.2-.2.3L96,216h80A8,8,0,0,1,184,224Z" }, null, -1), S = [
  x
], Z = { key: 2 }, z = /* @__PURE__ */ n("path", { d: "M184,224a8,8,0,0,1-8,8H80a7.3,7.3,0,0,1-2.5-.4A8,8,0,0,1,72,224a8,8,0,0,1,1.7-5l87.6-116.8A40,40,0,1,0,91.1,64.4a8,8,0,1,1-14.7-6.2,56,56,0,1,1,98,53.1c0,.1-.1.2-.2.3L96,216h80A8,8,0,0,1,184,224Z" }, null, -1), C = [
  z
], B = { key: 3 }, N = /* @__PURE__ */ n("path", { d: "M182,224a6,6,0,0,1-6,6H80a6.3,6.3,0,0,1-1.9-.3A6,6,0,0,1,74,224a6.5,6.5,0,0,1,1.3-3.8l87.6-116.8A42,42,0,1,0,89.3,63.7,6,6,0,0,1,78.2,59a54,54,0,1,1,94.6,51.2l-.2.2L92,218h84A6,6,0,0,1,182,224Z" }, null, -1), b = [
  N
], E = { key: 4 }, P = /* @__PURE__ */ n("path", { d: "M184,224a8,8,0,0,1-8,8H80a7.3,7.3,0,0,1-2.5-.4A8,8,0,0,1,72,224a8,8,0,0,1,1.7-5l87.6-116.8A40,40,0,1,0,91.1,64.4a8,8,0,1,1-14.7-6.2,56,56,0,1,1,98,53.1c0,.1-.1.2-.2.3L96,216h80A8,8,0,0,1,184,224Z" }, null, -1), V = [
  P
], W = { key: 5 }, $ = /* @__PURE__ */ n("path", { d: "M180,224a4,4,0,0,1-4,4H80l-1.3-.2A4,4,0,0,1,76,224a3.7,3.7,0,0,1,.9-2.5l87.6-117A43.4,43.4,0,0,0,172,80,44,44,0,0,0,87.5,62.9,4.1,4.1,0,0,1,82.2,65a4,4,0,0,1-2.1-5.2,52,52,0,1,1,91,49.3H171L88,220h88A4,4,0,0,1,180,224Z" }, null, -1), j = [
  $
], T = {
  name: "PhNumberTwo"
}, F = /* @__PURE__ */ A({
  ...T,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const i = d, h = r("weight", "regular"), _ = r("size", "1em"), p = r("color", "currentColor"), g = r("mirrored", !1), s = l(() => i.weight ?? h), c = l(() => i.size ?? _), m = l(() => i.color ?? p), u = l(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (a, q) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(c),
      height: t(c),
      fill: t(m),
      transform: t(u)
    }, a.$attrs), [
      f(a.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", M, L)) : t(s) === "duotone" ? (o(), e("g", v, S)) : t(s) === "fill" ? (o(), e("g", Z, C)) : t(s) === "light" ? (o(), e("g", B, b)) : t(s) === "regular" ? (o(), e("g", E, V)) : t(s) === "thin" ? (o(), e("g", W, j)) : w("", !0)
    ], 16, k));
  }
});
export {
  F as default
};
