import { defineComponent as u, inject as i, computed as c, openBlock as o, createElementBlock as e, mergeProps as S, unref as t, renderSlot as y, createCommentVNode as f, createElementVNode as a } from "vue";
const w = ["width", "height", "fill", "transform"], k = { key: 0 }, M = /* @__PURE__ */ a("path", { d: "M248,128a60,60,0,0,1-60,60H48a40,40,0,0,1,0-80H184a12,12,0,0,1,0,24H48a16,16,0,0,0,0,32H188a36,36,0,0,0,0-72H76a12,12,0,0,1,0-24H188A60,60,0,0,1,248,128Z" }, null, -1), v = [
  M
], x = { key: 1 }, z = /* @__PURE__ */ a("path", { d: "M192,184H46c-21.6,0-39.2-17.9-39.2-40S24.4,104,46,104H190a24,24,0,0,1,0,48H78a8,8,0,0,1,0-16H190a8,8,0,0,0,0-16H46c-12.8,0-23.2,10.8-23.2,24S33.2,168,46,168H192a40,40,0,0,0,0-80H80a8,8,0,0,1,0-16H192a56,56,0,0,1,0,112Z" }, null, -1), Z = [
  z
], C = { key: 2 }, B = /* @__PURE__ */ a("path", { d: "M192,184H46c-21.6,0-39.2-17.9-39.2-40S24.4,104,46,104H190a24,24,0,0,1,0,48H78a8,8,0,0,1,0-16H190a8,8,0,0,0,0-16H46c-12.8,0-23.2,10.8-23.2,24S33.2,168,46,168H192a40,40,0,0,0,0-80H80a8,8,0,0,1,0-16H192a56,56,0,0,1,0,112Z" }, null, -1), N = [
  B
], P = { key: 3 }, b = /* @__PURE__ */ a("path", { d: "M192,182H46c-20.5,0-37.2-17-37.2-38S25.5,106,46,106H190a22,22,0,0,1,0,44H78a6,6,0,0,1,0-12H190a10,10,0,0,0,0-20H46c-13.9,0-25.2,11.7-25.2,26S32.1,170,46,170H192a42,42,0,0,0,0-84H80a6,6,0,0,1,0-12H192a54,54,0,0,1,0,108Z" }, null, -1), E = [
  b
], V = { key: 4 }, W = /* @__PURE__ */ a("path", { d: "M192,184H46c-21.6,0-39.2-17.9-39.2-40S24.4,104,46,104H190a24,24,0,0,1,0,48H78a8,8,0,0,1,0-16H190a8,8,0,0,0,0-16H46c-12.8,0-23.2,10.8-23.2,24S33.2,168,46,168H192a40,40,0,0,0,0-80H80a8,8,0,0,1,0-16H192a56,56,0,0,1,0,112Z" }, null, -1), $ = [
  W
], j = { key: 5 }, A = /* @__PURE__ */ a("path", { d: "M192,180H46c-19.4,0-35.2-16.1-35.2-36S26.6,108,46,108H190a20,20,0,0,1,0,40H78a4,4,0,0,1,0-8H190a12,12,0,0,0,0-24H46c-15,0-27.2,12.6-27.2,28S31,172,46,172H192a44,44,0,0,0,0-88H80a4,4,0,0,1,0-8H192a52,52,0,0,1,0,104Z" }, null, -1), q = [
  A
], D = {
  name: "PhPaperclipHorizontal"
}, I = /* @__PURE__ */ u({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(l) {
    const n = l, H = i("weight", "regular"), _ = i("size", "1em"), h = i("color", "currentColor"), p = i("mirrored", !1), s = c(() => n.weight ?? H), r = c(() => n.size ?? _), g = c(() => n.color ?? h), m = c(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (d, F) => (o(), e("svg", S({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(r),
      height: t(r),
      fill: t(g),
      transform: t(m)
    }, d.$attrs), [
      y(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", k, v)) : t(s) === "duotone" ? (o(), e("g", x, Z)) : t(s) === "fill" ? (o(), e("g", C, N)) : t(s) === "light" ? (o(), e("g", P, E)) : t(s) === "regular" ? (o(), e("g", V, $)) : t(s) === "thin" ? (o(), e("g", j, q)) : f("", !0)
    ], 16, w));
  }
});
export {
  I as default
};
