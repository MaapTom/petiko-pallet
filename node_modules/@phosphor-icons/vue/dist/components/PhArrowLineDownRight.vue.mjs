import { defineComponent as H, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as f, createCommentVNode as L, createElementVNode as n } from "vue";
const V = ["width", "height", "fill", "transform"], w = { key: 0 }, Z = /* @__PURE__ */ n("path", { d: "M204,100V200a12,12,0,0,1-12,12H92a12,12,0,0,1,0-24h71L71.5,96.5a12,12,0,0,1,17-17L180,171V100a12,12,0,0,1,24,0Zm12-72H40a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24Z" }, null, -1), k = [
  Z
], M = { key: 1 }, v = /* @__PURE__ */ n("path", { d: "M200,100V200a8,8,0,0,1-8,8H92a8,8,0,0,1,0-16h80.7L74.3,93.7A8.1,8.1,0,0,1,85.7,82.3L184,180.7V100a8,8,0,0,1,16,0Zm16-68H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Z" }, null, -1), x = [
  v
], S = { key: 2 }, z = /* @__PURE__ */ n("path", { d: "M200,100V200a8,8,0,0,1-8,8H92a8,8,0,0,1-7.4-4.9,8.4,8.4,0,0,1,1.7-8.8L130.7,150,74.3,93.7A8.1,8.1,0,0,1,85.7,82.3L142,138.7l44.3-44.4a8.4,8.4,0,0,1,8.8-1.7A8,8,0,0,1,200,100Zm16-68H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Z" }, null, -1), A = [
  z
], C = { key: 3 }, B = /* @__PURE__ */ n("path", { d: "M198,100V200a6,6,0,0,1-6,6H92a6,6,0,0,1,0-12h85.5L75.8,92.2a5.9,5.9,0,0,1,8.4-8.4L186,185.5V100a6,6,0,0,1,12,0Zm18-66H40a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12Z" }, null, -1), N = [
  B
], b = { key: 4 }, E = /* @__PURE__ */ n("path", { d: "M200,100V200a8,8,0,0,1-8,8H92a8,8,0,0,1,0-16h80.7L74.3,93.7A8.1,8.1,0,0,1,85.7,82.3L184,180.7V100a8,8,0,0,1,16,0Zm16-68H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Z" }, null, -1), P = [
  E
], W = { key: 5 }, $ = /* @__PURE__ */ n("path", { d: "M196,100V200a4,4,0,0,1-4,4H92a4,4,0,0,1,0-8h90.3L77.2,90.8a4,4,0,0,1,5.6-5.6L188,190.3V100a4,4,0,0,1,8,0Zm20-64H40a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8Z" }, null, -1), j = [
  $
], D = {
  name: "PhArrowLineDownRight"
}, F = /* @__PURE__ */ H({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(h) {
    const a = h, l = i("weight", "regular"), _ = i("size", "1em"), m = i("color", "currentColor"), p = i("mirrored", !1), s = r(() => a.weight ?? l), d = r(() => a.size ?? _), g = r(() => a.color ?? m), u = r(() => a.mirrored !== void 0 ? a.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (c, R) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(g),
      transform: t(u)
    }, c.$attrs), [
      f(c.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", w, k)) : t(s) === "duotone" ? (o(), e("g", M, x)) : t(s) === "fill" ? (o(), e("g", S, A)) : t(s) === "light" ? (o(), e("g", C, N)) : t(s) === "regular" ? (o(), e("g", b, P)) : t(s) === "thin" ? (o(), e("g", W, j)) : L("", !0)
    ], 16, V));
  }
});
export {
  F as default
};
