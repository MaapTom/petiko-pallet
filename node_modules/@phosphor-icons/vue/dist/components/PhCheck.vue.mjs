import { defineComponent as y, inject as l, computed as r, openBlock as o, createElementBlock as e, mergeProps as f, unref as t, renderSlot as w, createCommentVNode as k, createElementVNode as n } from "vue";
const M = ["width", "height", "fill", "transform"], v = { key: 0 }, x = /* @__PURE__ */ n("path", { d: "M104,196a12.2,12.2,0,0,1-8.5-3.5l-56-56a12,12,0,0,1,17-17L104,167,207.5,63.5a12,12,0,0,1,17,17l-112,112A12.2,12.2,0,0,1,104,196Z" }, null, -1), A = [
  x
], C = { key: 1 }, L = /* @__PURE__ */ n("path", { d: "M104,192a8.5,8.5,0,0,1-5.7-2.3l-56-56a8.1,8.1,0,0,1,11.4-11.4L104,172.7,210.3,66.3a8.1,8.1,0,0,1,11.4,11.4l-112,112A8.5,8.5,0,0,1,104,192Z" }, null, -1), S = [
  L
], Z = { key: 2 }, z = /* @__PURE__ */ n("path", { d: "M104,192a8.5,8.5,0,0,1-5.7-2.3l-56-56a8.1,8.1,0,0,1,11.4-11.4L104,172.7,210.3,66.3a8.1,8.1,0,0,1,11.4,11.4l-112,112A8.5,8.5,0,0,1,104,192Z" }, null, -1), B = [
  z
], N = { key: 3 }, b = /* @__PURE__ */ n("path", { d: "M104,190a5.8,5.8,0,0,1-4.2-1.8l-56-56a5.9,5.9,0,0,1,8.4-8.4L104,175.5,211.8,67.8a5.9,5.9,0,0,1,8.4,8.4l-112,112A5.8,5.8,0,0,1,104,190Z" }, null, -1), E = [
  b
], P = { key: 4 }, V = /* @__PURE__ */ n("path", { d: "M104,192a8.5,8.5,0,0,1-5.7-2.3l-56-56a8.1,8.1,0,0,1,11.4-11.4L104,172.7,210.3,66.3a8.1,8.1,0,0,1,11.4,11.4l-112,112A8.5,8.5,0,0,1,104,192Z" }, null, -1), W = [
  V
], $ = { key: 5 }, j = /* @__PURE__ */ n("path", { d: "M104,188a3.9,3.9,0,0,1-2.8-1.2l-56-56a4,4,0,1,1,5.6-5.6L104,178.3,213.2,69.2a4,4,0,1,1,5.6,5.6l-112,112A3.9,3.9,0,0,1,104,188Z" }, null, -1), q = [
  j
], D = {
  name: "PhCheck"
}, H = /* @__PURE__ */ y({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(a) {
    const i = a, _ = l("weight", "regular"), h = l("size", "1em"), p = l("color", "currentColor"), g = l("mirrored", !1), s = r(() => i.weight ?? _), c = r(() => i.size ?? h), m = r(() => i.color ?? p), u = r(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, F) => (o(), e("svg", f({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(c),
      height: t(c),
      fill: t(m),
      transform: t(u)
    }, d.$attrs), [
      w(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", v, A)) : t(s) === "duotone" ? (o(), e("g", C, S)) : t(s) === "fill" ? (o(), e("g", Z, B)) : t(s) === "light" ? (o(), e("g", N, E)) : t(s) === "regular" ? (o(), e("g", P, W)) : t(s) === "thin" ? (o(), e("g", $, q)) : k("", !0)
    ], 16, M));
  }
});
export {
  H as default
};
