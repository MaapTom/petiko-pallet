import { defineComponent as y, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as H, unref as t, renderSlot as f, createCommentVNode as V, createElementVNode as n } from "vue";
const w = ["width", "height", "fill", "transform"], k = { key: 0 }, A = /* @__PURE__ */ n("path", { d: "M232.5,104.5a12.1,12.1,0,0,1-17,0L188,77V192a12,12,0,0,1-12,12H32a12,12,0,0,1,0-24H164V77l-27.5,27.5a12,12,0,0,1-17-17l48-48a12,12,0,0,1,17,0l48,48A12,12,0,0,1,232.5,104.5Z" }, null, -1), M = [
  A
], v = { key: 1 }, x = /* @__PURE__ */ n("path", { d: "M229.7,101.7a8.2,8.2,0,0,1-11.4,0L184,67.3V192a8,8,0,0,1-8,8H32a8,8,0,0,1,0-16H168V67.3l-34.3,34.4a8.1,8.1,0,0,1-11.4-11.4l48-48a8.1,8.1,0,0,1,11.4,0l48,48A8.1,8.1,0,0,1,229.7,101.7Z" }, null, -1), L = [
  x
], S = { key: 2 }, Z = /* @__PURE__ */ n("path", { d: "M231.4,99.1A8,8,0,0,1,224,104H184v88a8,8,0,0,1-8,8H32a8,8,0,0,1,0-16H168V104H128a8,8,0,0,1-7.4-4.9,8.4,8.4,0,0,1,1.7-8.8l48-48a8.1,8.1,0,0,1,11.4,0l48,48A8.4,8.4,0,0,1,231.4,99.1Z" }, null, -1), z = [
  Z
], C = { key: 3 }, B = /* @__PURE__ */ n("path", { d: "M228.2,100.2a5.8,5.8,0,0,1-8.4,0L182,62.5V192a6,6,0,0,1-6,6H32a6,6,0,0,1,0-12H170V62.5l-37.8,37.7a5.9,5.9,0,0,1-8.4-8.4l48-48a5.8,5.8,0,0,1,8.4,0l48,48A5.8,5.8,0,0,1,228.2,100.2Z" }, null, -1), b = [
  B
], E = { key: 4 }, N = /* @__PURE__ */ n("path", { d: "M229.7,101.7a8.2,8.2,0,0,1-11.4,0L184,67.3V192a8,8,0,0,1-8,8H32a8,8,0,0,1,0-16H168V67.3l-34.3,34.4a8.1,8.1,0,0,1-11.4-11.4l48-48a8.1,8.1,0,0,1,11.4,0l48,48A8.1,8.1,0,0,1,229.7,101.7Z" }, null, -1), P = [
  N
], W = { key: 5 }, $ = /* @__PURE__ */ n("path", { d: "M226.8,98.8a3.9,3.9,0,0,1-5.6,0L180,57.7V192a4,4,0,0,1-4,4H32a4,4,0,0,1,0-8H172V57.7L130.8,98.8a4,4,0,1,1-5.6-5.6l48-48a3.9,3.9,0,0,1,5.6,0l48,48A3.9,3.9,0,0,1,226.8,98.8Z" }, null, -1), j = [
  $
], R = {
  name: "PhArrowElbowRightUp"
}, D = /* @__PURE__ */ y({
  ...R,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const l = c, _ = i("weight", "regular"), h = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), s = r(() => l.weight ?? _), a = r(() => l.size ?? h), m = r(() => l.color ?? p), u = r(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, U) => (o(), e("svg", H({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(m),
      transform: t(u)
    }, d.$attrs), [
      f(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", k, M)) : t(s) === "duotone" ? (o(), e("g", v, L)) : t(s) === "fill" ? (o(), e("g", S, z)) : t(s) === "light" ? (o(), e("g", C, b)) : t(s) === "regular" ? (o(), e("g", E, P)) : t(s) === "thin" ? (o(), e("g", W, j)) : V("", !0)
    ], 16, w));
  }
});
export {
  D as default
};
