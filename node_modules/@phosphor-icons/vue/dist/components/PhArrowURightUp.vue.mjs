import { defineComponent as V, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as f, createCommentVNode as v, createElementVNode as a } from "vue";
const w = ["width", "height", "fill", "transform"], L = { key: 0 }, k = /* @__PURE__ */ a("path", { d: "M224.5,88.5a12.1,12.1,0,0,1-17,0L180,61V168a68,68,0,0,1-136,0V80a12,12,0,0,1,24,0v88a44,44,0,0,0,88,0V61L128.5,88.5a12,12,0,0,1-17-17l48-48a12,12,0,0,1,17,0l48,48A12,12,0,0,1,224.5,88.5Z" }, null, -1), A = [
  k
], M = { key: 1 }, x = /* @__PURE__ */ a("path", { d: "M221.7,85.7a8.2,8.2,0,0,1-11.4,0L176,51.3V168a64,64,0,0,1-128,0V80a8,8,0,0,1,16,0v88a48,48,0,0,0,96,0V51.3L125.7,85.7a8.1,8.1,0,0,1-11.4-11.4l48-48a8.1,8.1,0,0,1,11.4,0l48,48A8.1,8.1,0,0,1,221.7,85.7Z" }, null, -1), S = [
  x
], Z = { key: 2 }, z = /* @__PURE__ */ a("path", { d: "M223.4,83.1A8,8,0,0,1,216,88H176v80a64,64,0,0,1-128,0V80a8,8,0,0,1,16,0v88a48,48,0,0,0,96,0V88H120a8,8,0,0,1-7.4-4.9,8.4,8.4,0,0,1,1.7-8.8l48-48a8.1,8.1,0,0,1,11.4,0l48,48A8.4,8.4,0,0,1,223.4,83.1Z" }, null, -1), C = [
  z
], B = { key: 3 }, N = /* @__PURE__ */ a("path", { d: "M220.2,84.2a5.8,5.8,0,0,1-8.4,0L174,46.5V168a62,62,0,0,1-124,0V80a6,6,0,0,1,12,0v88a50,50,0,0,0,100,0V46.5L124.2,84.2a5.9,5.9,0,0,1-8.4-8.4l48-48a5.8,5.8,0,0,1,8.4,0l48,48A5.8,5.8,0,0,1,220.2,84.2Z" }, null, -1), b = [
  N
], E = { key: 4 }, H = /* @__PURE__ */ a("path", { d: "M221.7,85.7a8.2,8.2,0,0,1-11.4,0L176,51.3V168a64,64,0,0,1-128,0V80a8,8,0,0,1,16,0v88a48,48,0,0,0,96,0V51.3L125.7,85.7a8.1,8.1,0,0,1-11.4-11.4l48-48a8.1,8.1,0,0,1,11.4,0l48,48A8.1,8.1,0,0,1,221.7,85.7Z" }, null, -1), P = [
  H
], U = { key: 5 }, W = /* @__PURE__ */ a("path", { d: "M218.8,82.8a3.9,3.9,0,0,1-5.6,0L172,41.7V168a60,60,0,0,1-120,0V80a4,4,0,0,1,8,0v88a52,52,0,0,0,104,0V41.7L122.8,82.8a4,4,0,0,1-5.6-5.6l48-48a3.9,3.9,0,0,1,5.6,0l48,48A3.9,3.9,0,0,1,218.8,82.8Z" }, null, -1), $ = [
  W
], j = {
  name: "PhArrowURightUp"
}, D = /* @__PURE__ */ V({
  ...j,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const n = c, _ = i("weight", "regular"), h = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), s = r(() => n.weight ?? _), l = r(() => n.size ?? h), m = r(() => n.color ?? p), u = r(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, R) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(l),
      height: t(l),
      fill: t(m),
      transform: t(u)
    }, d.$attrs), [
      f(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", L, A)) : t(s) === "duotone" ? (o(), e("g", M, S)) : t(s) === "fill" ? (o(), e("g", Z, C)) : t(s) === "light" ? (o(), e("g", B, b)) : t(s) === "regular" ? (o(), e("g", E, P)) : t(s) === "thin" ? (o(), e("g", U, $)) : v("", !0)
    ], 16, w));
  }
});
export {
  D as default
};
