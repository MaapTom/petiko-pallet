import { defineComponent as v, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as V, createCommentVNode as f, createElementVNode as n } from "vue";
const H = ["width", "height", "fill", "transform"], Z = { key: 0 }, w = /* @__PURE__ */ n("path", { d: "M228,216a12,12,0,0,1-12,12H40a12,12,0,0,1,0-24H216A12,12,0,0,1,228,216ZM128,192a76.1,76.1,0,0,0,76-76V56a12,12,0,0,0-24,0v60a52,52,0,0,1-104,0V56a12,12,0,0,0-24,0v60A76.1,76.1,0,0,0,128,192Z" }, null, -1), A = [
  w
], M = { key: 1 }, k = /* @__PURE__ */ n("path", { d: "M224,216a8,8,0,0,1-8,8H40a8,8,0,0,1,0-16H216A8,8,0,0,1,224,216Zm-96-24a72.1,72.1,0,0,0,72-72V56a8,8,0,0,0-16,0v64a56,56,0,0,1-112,0V56a8,8,0,0,0-16,0v64A72.1,72.1,0,0,0,128,192Z" }, null, -1), x = [
  k
], S = { key: 2 }, z = /* @__PURE__ */ n("path", { d: "M56,120V56a8,8,0,0,1,16,0v64a56,56,0,0,0,112,0V56a8,8,0,0,1,16,0v64a72,72,0,0,1-144,0Zm160,88H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Z" }, null, -1), C = [
  z
], B = { key: 3 }, N = /* @__PURE__ */ n("path", { d: "M222,216a6,6,0,0,1-6,6H40a6,6,0,0,1,0-12H216A6,6,0,0,1,222,216Zm-94-26a70.1,70.1,0,0,0,70-70V56a6,6,0,0,0-12,0v64a58,58,0,0,1-116,0V56a6,6,0,0,0-12,0v64A70.1,70.1,0,0,0,128,190Z" }, null, -1), b = [
  N
], E = { key: 4 }, P = /* @__PURE__ */ n("path", { d: "M224,216a8,8,0,0,1-8,8H40a8,8,0,0,1,0-16H216A8,8,0,0,1,224,216Zm-96-24a72.1,72.1,0,0,0,72-72V56a8,8,0,0,0-16,0v64a56,56,0,0,1-112,0V56a8,8,0,0,0-16,0v64A72.1,72.1,0,0,0,128,192Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ n("path", { d: "M220,216a4,4,0,0,1-4,4H40a4,4,0,0,1,0-8H216A4,4,0,0,1,220,216Zm-92-28a68.1,68.1,0,0,0,68-68V56a4,4,0,0,0-8,0v64a60,60,0,0,1-120,0V56a4,4,0,0,0-8,0v64A68.1,68.1,0,0,0,128,188Z" }, null, -1), T = [
  j
], U = {
  name: "PhTextUnderline"
}, F = /* @__PURE__ */ v({
  ...U,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(l) {
    const a = l, _ = i("weight", "regular"), h = i("size", "1em"), p = i("color", "currentColor"), m = i("mirrored", !1), s = r(() => a.weight ?? _), d = r(() => a.size ?? h), g = r(() => a.color ?? p), u = r(() => a.mirrored !== void 0 ? a.mirrored ? "scale(-1, 1)" : void 0 : m ? "scale(-1, 1)" : void 0);
    return (c, q) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(g),
      transform: t(u)
    }, c.$attrs), [
      V(c.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", Z, A)) : t(s) === "duotone" ? (o(), e("g", M, x)) : t(s) === "fill" ? (o(), e("g", S, C)) : t(s) === "light" ? (o(), e("g", B, b)) : t(s) === "regular" ? (o(), e("g", E, W)) : t(s) === "thin" ? (o(), e("g", $, T)) : f("", !0)
    ], 16, H));
  }
});
export {
  F as default
};
