import { defineComponent as y, inject as l, computed as r, openBlock as e, createElementBlock as s, mergeProps as f, unref as t, renderSlot as w, createCommentVNode as A, createElementVNode as o } from "vue";
const k = ["width", "height", "fill", "transform"], M = { key: 0 }, Z = /* @__PURE__ */ o("path", { d: "M96,220a12.2,12.2,0,0,1-8.5-3.5,12,12,0,0,1,0-17L159,128,87.5,56.5a12,12,0,0,1,17-17l80,80a12,12,0,0,1,0,17l-80,80A12.2,12.2,0,0,1,96,220Z" }, null, -1), v = [
  Z
], x = { key: 1 }, C = /* @__PURE__ */ o("g", { opacity: "0.2" }, [
  /* @__PURE__ */ o("polygon", { points: "96 48 176 128 96 208 96 48" })
], -1), S = /* @__PURE__ */ o("path", { d: "M96,216a8.5,8.5,0,0,1-3.1-.6A8,8,0,0,1,88,208V48a8,8,0,0,1,4.9-7.4,8.4,8.4,0,0,1,8.8,1.7l80,80a8.1,8.1,0,0,1,0,11.4l-80,80A8.3,8.3,0,0,1,96,216Zm8-148.7V188.7L164.7,128Z" }, null, -1), z = [
  C,
  S
], L = { key: 2 }, V = /* @__PURE__ */ o("path", { d: "M181.7,133.7l-80,80A8.3,8.3,0,0,1,96,216a8.5,8.5,0,0,1-3.1-.6A8,8,0,0,1,88,208V48a8,8,0,0,1,4.9-7.4,8.4,8.4,0,0,1,8.8,1.7l80,80A8.1,8.1,0,0,1,181.7,133.7Z" }, null, -1), B = [
  V
], N = { key: 3 }, b = /* @__PURE__ */ o("path", { d: "M96,214a6,6,0,0,1-4.2-10.2L167.5,128,91.8,52.2a5.9,5.9,0,0,1,8.4-8.4l80,80a5.8,5.8,0,0,1,0,8.4l-80,80A5.8,5.8,0,0,1,96,214Z" }, null, -1), E = [
  b
], P = { key: 4 }, W = /* @__PURE__ */ o("path", { d: "M96,216a8.5,8.5,0,0,1-5.7-2.3,8.1,8.1,0,0,1,0-11.4L164.7,128,90.3,53.7a8.1,8.1,0,0,1,11.4-11.4l80,80a8.1,8.1,0,0,1,0,11.4l-80,80A8.5,8.5,0,0,1,96,216Z" }, null, -1), $ = [
  W
], j = { key: 5 }, R = /* @__PURE__ */ o("path", { d: "M96,212a3.9,3.9,0,0,1-2.8-1.2,3.9,3.9,0,0,1,0-5.6L170.3,128,93.2,50.8a4,4,0,0,1,5.6-5.6l80,80a3.9,3.9,0,0,1,0,5.6l-80,80A3.9,3.9,0,0,1,96,212Z" }, null, -1), q = [
  R
], D = {
  name: "PhCaretRight"
}, H = /* @__PURE__ */ y({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(a) {
    const i = a, _ = l("weight", "regular"), h = l("size", "1em"), p = l("color", "currentColor"), g = l("mirrored", !1), n = r(() => i.weight ?? _), c = r(() => i.size ?? h), m = r(() => i.color ?? p), u = r(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, F) => (e(), s("svg", f({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(c),
      height: t(c),
      fill: t(m),
      transform: t(u)
    }, d.$attrs), [
      w(d.$slots, "default"),
      t(n) === "bold" ? (e(), s("g", M, v)) : t(n) === "duotone" ? (e(), s("g", x, z)) : t(n) === "fill" ? (e(), s("g", L, B)) : t(n) === "light" ? (e(), s("g", N, E)) : t(n) === "regular" ? (e(), s("g", P, $)) : t(n) === "thin" ? (e(), s("g", j, q)) : A("", !0)
    ], 16, k));
  }
});
export {
  H as default
};
