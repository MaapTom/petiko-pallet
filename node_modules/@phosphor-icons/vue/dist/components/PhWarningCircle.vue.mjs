import { defineComponent as u, inject as r, computed as c, openBlock as e, createElementBlock as s, mergeProps as A, unref as t, renderSlot as y, createCommentVNode as f, createElementVNode as o } from "vue";
const v = ["width", "height", "fill", "transform"], w = { key: 0 }, k = /* @__PURE__ */ o("path", { d: "M128,20A108,108,0,1,0,236,128,108.1,108.1,0,0,0,128,20Zm0,192a84,84,0,1,1,84-84A84.1,84.1,0,0,1,128,212Zm-12-80V80a12,12,0,0,1,24,0v52a12,12,0,0,1-24,0Zm28,40a16,16,0,1,1-16-16A16,16,0,0,1,144,172Z" }, null, -1), M = [
  k
], x = { key: 1 }, V = /* @__PURE__ */ o("g", { opacity: "0.2" }, [
  /* @__PURE__ */ o("circle", {
    cx: "128",
    cy: "128",
    r: "96"
  })
], -1), C = /* @__PURE__ */ o("path", { d: "M128,24A104,104,0,1,0,232,128,104.1,104.1,0,0,0,128,24Zm0,192a88,88,0,1,1,88-88A88.1,88.1,0,0,1,128,216Zm-8-80V80a8,8,0,0,1,16,0v56a8,8,0,0,1-16,0Zm20,36a12,12,0,1,1-12-12A12,12,0,0,1,140,172Z" }, null, -1), S = [
  V,
  C
], z = { key: 2 }, B = /* @__PURE__ */ o("path", { d: "M128,24A104,104,0,1,0,232,128,104.1,104.1,0,0,0,128,24Zm-8,56a8,8,0,0,1,16,0v56a8,8,0,0,1-16,0Zm8,104a12,12,0,1,1,12-12A12,12,0,0,1,128,184Z" }, null, -1), N = [
  B
], W = { key: 3 }, b = /* @__PURE__ */ o("path", { d: "M128,26A102,102,0,1,0,230,128,102.2,102.2,0,0,0,128,26Zm0,192a90,90,0,1,1,90-90A90.1,90.1,0,0,1,128,218Zm-6-82V80a6,6,0,0,1,12,0v56a6,6,0,0,1-12,0Zm16,36a10,10,0,1,1-10-10A10,10,0,0,1,138,172Z" }, null, -1), E = [
  b
], P = { key: 4 }, $ = /* @__PURE__ */ o("path", { d: "M128,24A104,104,0,1,0,232,128,104.1,104.1,0,0,0,128,24Zm0,192a88,88,0,1,1,88-88A88.1,88.1,0,0,1,128,216Zm-8-80V80a8,8,0,0,1,16,0v56a8,8,0,0,1-16,0Zm20,36a12,12,0,1,1-12-12A12,12,0,0,1,140,172Z" }, null, -1), j = [
  $
], q = { key: 5 }, D = /* @__PURE__ */ o("path", { d: "M128,28A100,100,0,1,0,228,128,100.2,100.2,0,0,0,128,28Zm0,192a92,92,0,1,1,92-92A92.1,92.1,0,0,1,128,220Zm-4-84V80a4,4,0,0,1,8,0v56a4,4,0,0,1-8,0Zm12,36a8,8,0,1,1-8-8A8,8,0,0,1,136,172Z" }, null, -1), F = [
  D
], G = {
  name: "PhWarningCircle"
}, J = /* @__PURE__ */ u({
  ...G,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(l) {
    const i = l, _ = r("weight", "regular"), h = r("size", "1em"), m = r("color", "currentColor"), p = r("mirrored", !1), n = c(() => i.weight ?? _), a = c(() => i.size ?? h), g = c(() => i.color ?? m), Z = c(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (d, H) => (e(), s("svg", A({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(g),
      transform: t(Z)
    }, d.$attrs), [
      y(d.$slots, "default"),
      t(n) === "bold" ? (e(), s("g", w, M)) : t(n) === "duotone" ? (e(), s("g", x, S)) : t(n) === "fill" ? (e(), s("g", z, N)) : t(n) === "light" ? (e(), s("g", W, E)) : t(n) === "regular" ? (e(), s("g", P, j)) : t(n) === "thin" ? (e(), s("g", q, F)) : f("", !0)
    ], 16, v));
  }
});
export {
  J as default
};
