import { defineComponent as y, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as V, unref as t, renderSlot as f, createCommentVNode as A, createElementVNode as n } from "vue";
const H = ["width", "height", "fill", "transform"], w = { key: 0 }, k = /* @__PURE__ */ n("path", { d: "M72,212a11.9,11.9,0,0,1-11.2-7.8l-48-128a12,12,0,1,1,22.4-8.4l36.8,98,36.8-98A11.9,11.9,0,0,1,120,60H232a12,12,0,0,1,12,12V96a12,12,0,0,1-24,0V84H128.3L83.2,204.2A11.9,11.9,0,0,1,72,212Z" }, null, -1), L = [
  k
], M = { key: 1 }, v = /* @__PURE__ */ n("path", { d: "M72,208a8.1,8.1,0,0,1-7.5-5.2l-48-128a8,8,0,1,1,15-5.6L72,177.2l40.5-108A8.1,8.1,0,0,1,120,64H232a8,8,0,0,1,8,8V96a8,8,0,0,1-16,0V80H125.5l-46,122.8A8.1,8.1,0,0,1,72,208Z" }, null, -1), x = [
  v
], S = { key: 2 }, Z = /* @__PURE__ */ n("path", { d: "M72,208a8.1,8.1,0,0,1-7.5-5.2l-48-128a8,8,0,1,1,15-5.6L72,177.2l40.5-108A8.1,8.1,0,0,1,120,64H232a8,8,0,0,1,8,8V96a8,8,0,0,1-16,0V80H125.5l-46,122.8A8.1,8.1,0,0,1,72,208Z" }, null, -1), z = [
  Z
], C = { key: 3 }, B = /* @__PURE__ */ n("path", { d: "M72,206a6.1,6.1,0,0,1-5.6-3.9l-48-128a6,6,0,1,1,11.2-4.2L72,182.9l42.4-113A6.1,6.1,0,0,1,120,66H232a6,6,0,0,1,6,6V96a6,6,0,0,1-12,0V78H124.2L77.6,202.1A6.1,6.1,0,0,1,72,206Z" }, null, -1), N = [
  B
], b = { key: 4 }, E = /* @__PURE__ */ n("path", { d: "M72,208a8.1,8.1,0,0,1-7.5-5.2l-48-128a8,8,0,1,1,15-5.6L72,177.2l40.5-108A8.1,8.1,0,0,1,120,64H232a8,8,0,0,1,8,8V96a8,8,0,0,1-16,0V80H125.5l-46,122.8A8.1,8.1,0,0,1,72,208Z" }, null, -1), P = [
  E
], W = { key: 5 }, $ = /* @__PURE__ */ n("path", { d: "M72,204a3.8,3.8,0,0,1-3.7-2.6l-48-128a4,4,0,0,1,7.4-2.8L72,188.6l44.3-118A3.8,3.8,0,0,1,120,68H232a4,4,0,0,1,4,4V96a4,4,0,0,1-8,0V76H122.8L75.7,201.4A3.8,3.8,0,0,1,72,204Z" }, null, -1), j = [
  $
], R = {
  name: "PhRadical"
}, F = /* @__PURE__ */ y({
  ...R,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const l = c, _ = i("weight", "regular"), h = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), s = r(() => l.weight ?? _), a = r(() => l.size ?? h), m = r(() => l.color ?? p), u = r(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, q) => (o(), e("svg", V({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(m),
      transform: t(u)
    }, d.$attrs), [
      f(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", w, L)) : t(s) === "duotone" ? (o(), e("g", M, x)) : t(s) === "fill" ? (o(), e("g", S, z)) : t(s) === "light" ? (o(), e("g", C, N)) : t(s) === "regular" ? (o(), e("g", b, P)) : t(s) === "thin" ? (o(), e("g", W, j)) : A("", !0)
    ], 16, H));
  }
});
export {
  F as default
};
