import { defineComponent as A, inject as r, computed as c, openBlock as e, createElementBlock as s, mergeProps as y, unref as t, renderSlot as M, createCommentVNode as f, createElementVNode as o } from "vue";
const Z = ["width", "height", "fill", "transform"], w = { key: 0 }, k = /* @__PURE__ */ o("path", { d: "M160,220H72A68,68,0,0,1,72,84a53.7,53.7,0,0,1,7,.4A92,92,0,1,1,160,220ZM70.2,108A44,44,0,0,0,72,196h88a68,68,0,1,0-68-68,12,12,0,0,1-24,0A94.3,94.3,0,0,1,70.2,108Z" }, null, -1), H = [
  k
], v = { key: 1 }, x = /* @__PURE__ */ o("g", { opacity: "0.2" }, [
  /* @__PURE__ */ o("path", { d: "M80,128a80,80,0,1,1,80,80H72A56,56,0,0,1,72,96a57.5,57.5,0,0,1,13.9,1.7" })
], -1), C = /* @__PURE__ */ o("path", { d: "M160,216H72A64,64,0,0,1,72,88a58.2,58.2,0,0,1,9.3.7A88,88,0,1,1,160,216ZM72,104a48,48,0,0,0,0,96h88a72,72,0,1,0-72-72,8,8,0,0,1-16,0,89.6,89.6,0,0,1,3.3-23.9Z" }, null, -1), S = [
  x,
  C
], z = { key: 2 }, B = /* @__PURE__ */ o("path", { d: "M248,128.9c-.5,48.4-40.7,87.1-89.1,87.1H73c-35.2,0-65-28.8-65-64A64,64,0,0,1,56.6,89.9a4,4,0,0,1,4.7,5.2A103.1,103.1,0,0,0,56,127.7a8.2,8.2,0,0,0,7.5,8.3,8,8,0,0,0,8.5-8,86.5,86.5,0,0,1,9.3-39.3h0A88,88,0,0,1,248,128.9Z" }, null, -1), N = [
  B
], b = { key: 3 }, E = /* @__PURE__ */ o("path", { d: "M160,214H72A62,62,0,0,1,72,90a60,60,0,0,1,10.4.9A86,86,0,1,1,160,214ZM72,102a50,50,0,0,0,0,100h88a74,74,0,1,0-74-74,6,6,0,0,1-12,0,87.9,87.9,0,0,1,3.9-25.7A56.8,56.8,0,0,0,72,102Z" }, null, -1), P = [
  E
], V = { key: 4 }, W = /* @__PURE__ */ o("path", { d: "M160,216H72A64,64,0,0,1,72,88a58.2,58.2,0,0,1,9.3.7A88,88,0,1,1,160,216ZM72,104a48,48,0,0,0,0,96h88a72,72,0,1,0-72-72,8,8,0,0,1-16,0,85.7,85.7,0,0,1,3.3-23.9Z" }, null, -1), $ = [
  W
], j = { key: 5 }, q = /* @__PURE__ */ o("path", { d: "M160,212H72A60,60,0,0,1,72,92a64.2,64.2,0,0,1,11.6,1.1A84,84,0,1,1,160,212ZM72,100a52,52,0,0,0,0,104h88a76,76,0,1,0-76-76,4,4,0,0,1-8,0,82.3,82.3,0,0,1,4.6-27.3A49.9,49.9,0,0,0,72,100Z" }, null, -1), D = [
  q
], F = {
  name: "PhCloud"
}, J = /* @__PURE__ */ A({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(h) {
    const i = h, l = r("weight", "regular"), _ = r("size", "1em"), p = r("color", "currentColor"), g = r("mirrored", !1), n = c(() => i.weight ?? l), d = c(() => i.size ?? _), u = c(() => i.color ?? p), m = c(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (a, G) => (e(), s("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(u),
      transform: t(m)
    }, a.$attrs), [
      M(a.$slots, "default"),
      t(n) === "bold" ? (e(), s("g", w, H)) : t(n) === "duotone" ? (e(), s("g", v, S)) : t(n) === "fill" ? (e(), s("g", z, N)) : t(n) === "light" ? (e(), s("g", b, P)) : t(n) === "regular" ? (e(), s("g", V, $)) : t(n) === "thin" ? (e(), s("g", j, D)) : f("", !0)
    ], 16, Z));
  }
});
export {
  J as default
};
