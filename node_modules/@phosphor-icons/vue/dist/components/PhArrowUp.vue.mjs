import { defineComponent as y, inject as i, computed as l, openBlock as o, createElementBlock as e, mergeProps as f, unref as t, renderSlot as V, createCommentVNode as w, createElementVNode as n } from "vue";
const L = ["width", "height", "fill", "transform"], k = { key: 0 }, A = /* @__PURE__ */ n("path", { d: "M208.5,120.5a12.1,12.1,0,0,1-17,0L140,69V216a12,12,0,0,1-24,0V69L64.5,120.5a12,12,0,0,1-17-17l72-72a12,12,0,0,1,17,0l72,72A12,12,0,0,1,208.5,120.5Z" }, null, -1), M = [
  A
], v = { key: 1 }, x = /* @__PURE__ */ n("path", { d: "M205.7,117.7a8.2,8.2,0,0,1-11.4,0L136,59.3V216a8,8,0,0,1-16,0V59.3L61.7,117.7a8.1,8.1,0,0,1-11.4-11.4l72-72a8.1,8.1,0,0,1,11.4,0l72,72A8.1,8.1,0,0,1,205.7,117.7Z" }, null, -1), S = [
  x
], Z = { key: 2 }, z = /* @__PURE__ */ n("path", { d: "M207.4,115.1A8,8,0,0,1,200,120H136v96a8,8,0,0,1-16,0V120H56a8,8,0,0,1-7.4-4.9,8.4,8.4,0,0,1,1.7-8.8l72-72a8.1,8.1,0,0,1,11.4,0l72,72A8.4,8.4,0,0,1,207.4,115.1Z" }, null, -1), C = [
  z
], B = { key: 3 }, N = /* @__PURE__ */ n("path", { d: "M204.2,116.2a5.8,5.8,0,0,1-8.4,0L134,54.5V216a6,6,0,0,1-12,0V54.5L60.2,116.2a5.9,5.9,0,0,1-8.4-8.4l72-72a5.8,5.8,0,0,1,8.4,0l72,72A5.8,5.8,0,0,1,204.2,116.2Z" }, null, -1), b = [
  N
], E = { key: 4 }, H = /* @__PURE__ */ n("path", { d: "M205.7,117.7a8.2,8.2,0,0,1-11.4,0L136,59.3V216a8,8,0,0,1-16,0V59.3L61.7,117.7a8.1,8.1,0,0,1-11.4-11.4l72-72a8.1,8.1,0,0,1,11.4,0l72,72A8.1,8.1,0,0,1,205.7,117.7Z" }, null, -1), P = [
  H
], W = { key: 5 }, $ = /* @__PURE__ */ n("path", { d: "M202.8,114.8a3.9,3.9,0,0,1-5.6,0L132,49.7V216a4,4,0,0,1-8,0V49.7L58.8,114.8a4,4,0,0,1-5.6-5.6l72-72a3.9,3.9,0,0,1,5.6,0l72,72A3.9,3.9,0,0,1,202.8,114.8Z" }, null, -1), j = [
  $
], U = {
  name: "PhArrowUp"
}, F = /* @__PURE__ */ y({
  ...U,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const r = c, _ = i("weight", "regular"), h = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), s = l(() => r.weight ?? _), a = l(() => r.size ?? h), m = l(() => r.color ?? p), u = l(() => r.mirrored !== void 0 ? r.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, q) => (o(), e("svg", f({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(m),
      transform: t(u)
    }, d.$attrs), [
      V(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", k, M)) : t(s) === "duotone" ? (o(), e("g", v, S)) : t(s) === "fill" ? (o(), e("g", Z, C)) : t(s) === "light" ? (o(), e("g", B, b)) : t(s) === "regular" ? (o(), e("g", E, P)) : t(s) === "thin" ? (o(), e("g", W, j)) : w("", !0)
    ], 16, L));
  }
});
export {
  F as default
};
