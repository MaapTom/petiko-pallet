import { defineComponent as g, inject as n, computed as i, openBlock as e, createElementBlock as a, mergeProps as u, unref as t, renderSlot as L, createCommentVNode as y, createElementVNode as o } from "vue";
const f = ["width", "height", "fill", "transform"], M = { key: 0 }, w = /* @__PURE__ */ o("path", { d: "M128,20A108,108,0,1,0,236,128,108.1,108.1,0,0,0,128,20Zm0,192a84,84,0,1,1,84-84A84.1,84.1,0,0,1,128,212ZM76,108a16,16,0,1,1,16,16A16,16,0,0,1,76,108Zm72,0a16,16,0,1,1,16,16A16,16,0,0,1,148,108Zm31.6,49.3a12,12,0,0,1-18.8,15l-.8-1.1-6.6,8.3a12.1,12.1,0,0,1-18.8,0l-6.6-8.3-6.6,8.3a12.1,12.1,0,0,1-18.8,0L96,171.2l-.8,1.1a12,12,0,0,1-18.8-15l10.2-12.8a12.1,12.1,0,0,1,18.8,0l6.6,8.3,6.6-8.3a12.1,12.1,0,0,1,18.8,0l6.6,8.3,6.6-8.3a12.1,12.1,0,0,1,18.8,0Z" }, null, -1), k = [
  w
], v = { key: 1 }, x = /* @__PURE__ */ o("g", { opacity: "0.2" }, [
  /* @__PURE__ */ o("circle", {
    cx: "128",
    cy: "128",
    r: "96"
  })
], -1), S = /* @__PURE__ */ o("path", { d: "M80,108a12,12,0,1,1,12,12A12,12,0,0,1,80,108Zm84,12a12,12,0,1,0-12-12A12,12,0,0,0,164,120Zm68,8A104,104,0,1,1,128,24,104.2,104.2,0,0,1,232,128Zm-16,0a88,88,0,1,0-88,88A88.1,88.1,0,0,0,216,128Zm-49.8,19a7.9,7.9,0,0,0-12.4,0L144,159.2,134.2,147a7.9,7.9,0,0,0-12.4,0L112,159.2,102.2,147a7.9,7.9,0,0,0-12.4,0l-16,20a8,8,0,0,0,12.4,10L96,164.8l9.8,12.2a7.9,7.9,0,0,0,12.4,0l9.8-12.2,9.8,12.2a7.9,7.9,0,0,0,12.4,0l9.8-12.2,9.8,12.2a7.8,7.8,0,0,0,6.2,3,8,8,0,0,0,6.2-13Z" }, null, -1), z = [
  x,
  S
], C = { key: 2 }, B = /* @__PURE__ */ o("path", { d: "M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm36,72a12,12,0,1,1-12,12A12,12,0,0,1,164,96ZM92,96a12,12,0,1,1-12,12A12,12,0,0,1,92,96Zm89,82.2a7.9,7.9,0,0,1-5,1.8,7.8,7.8,0,0,1-6.2-3L160,164.8,150.2,177a7.9,7.9,0,0,1-12.4,0L128,164.8,118.2,177a7.9,7.9,0,0,1-12.4,0L96,164.8,86.2,177a8,8,0,0,1-12.4-10l16-20a7.9,7.9,0,0,1,12.4,0l9.8,12.2,9.8-12.2a7.9,7.9,0,0,1,12.4,0l9.8,12.2,9.8-12.2a7.9,7.9,0,0,1,12.4,0l16,20A7.9,7.9,0,0,1,181,178.2Z" }, null, -1), N = [
  B
], b = { key: 3 }, E = /* @__PURE__ */ o("path", { d: "M128,26A102,102,0,1,0,230,128,102.2,102.2,0,0,0,128,26Zm0,192a90,90,0,1,1,90-90A90.1,90.1,0,0,1,128,218Zm52.7-49.7a5.9,5.9,0,0,1-1,8.4A5.8,5.8,0,0,1,176,178a6,6,0,0,1-4.7-2.3L160,161.6l-11.3,14.1a6,6,0,0,1-9.4,0L128,161.6l-11.3,14.1a6,6,0,0,1-9.4,0L96,161.6,84.7,175.7a6,6,0,1,1-9.4-7.4l16-20a6,6,0,0,1,9.4,0L112,162.4l11.3-14.1a6,6,0,0,1,9.4,0L144,162.4l11.3-14.1a6,6,0,0,1,9.4,0ZM82,108a10,10,0,1,1,10,10A10,10,0,0,1,82,108Zm72,0a10,10,0,1,1,10,10A10,10,0,0,1,154,108Z" }, null, -1), P = [
  E
], V = { key: 4 }, W = /* @__PURE__ */ o("path", { d: "M80,108a12,12,0,1,1,12,12A12,12,0,0,1,80,108Zm84,12a12,12,0,1,0-12-12A12,12,0,0,0,164,120Zm68,8A104,104,0,1,1,128,24,104.2,104.2,0,0,1,232,128Zm-16,0a88,88,0,1,0-88,88A88.1,88.1,0,0,0,216,128Zm-49.8,19a7.9,7.9,0,0,0-12.4,0L144,159.2,134.2,147a7.9,7.9,0,0,0-12.4,0L112,159.2,102.2,147a7.9,7.9,0,0,0-12.4,0l-16,20a8,8,0,0,0,12.4,10L96,164.8l9.8,12.2a7.9,7.9,0,0,0,12.4,0l9.8-12.2,9.8,12.2a7.9,7.9,0,0,0,12.4,0l9.8-12.2,9.8,12.2a7.8,7.8,0,0,0,6.2,3,8,8,0,0,0,6.2-13Z" }, null, -1), $ = [
  W
], j = { key: 5 }, q = /* @__PURE__ */ o("path", { d: "M128,28A100,100,0,1,0,228,128,100.2,100.2,0,0,0,128,28Zm0,192a92,92,0,1,1,92-92A92.1,92.1,0,0,1,128,220Zm51.1-50.5a4,4,0,0,1-.6,5.6,3.8,3.8,0,0,1-2.5.9,3.9,3.9,0,0,1-3.1-1.5L160,158.4l-12.9,16.1a4,4,0,0,1-6.2,0L128,158.4l-12.9,16.1a4,4,0,0,1-6.2,0L96,158.4,83.1,174.5a4,4,0,0,1-6.2-5l16-20a4,4,0,0,1,6.2,0L112,165.6l12.9-16.1a4,4,0,0,1,6.2,0L144,165.6l12.9-16.1a4,4,0,0,1,6.2,0ZM84,108a8,8,0,1,1,8,8A8,8,0,0,1,84,108Zm72,0a8,8,0,1,1,8,8A8,8,0,0,1,156,108Z" }, null, -1), D = [
  q
], F = {
  name: "PhSmileyNervous"
}, I = /* @__PURE__ */ g({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const s = d, _ = n("weight", "regular"), h = n("size", "1em"), m = n("color", "currentColor"), Z = n("mirrored", !1), l = i(() => s.weight ?? _), r = i(() => s.size ?? h), p = i(() => s.color ?? m), A = i(() => s.mirrored !== void 0 ? s.mirrored ? "scale(-1, 1)" : void 0 : Z ? "scale(-1, 1)" : void 0);
    return (c, G) => (e(), a("svg", u({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(r),
      height: t(r),
      fill: t(p),
      transform: t(A)
    }, c.$attrs), [
      L(c.$slots, "default"),
      t(l) === "bold" ? (e(), a("g", M, k)) : t(l) === "duotone" ? (e(), a("g", v, z)) : t(l) === "fill" ? (e(), a("g", C, N)) : t(l) === "light" ? (e(), a("g", b, P)) : t(l) === "regular" ? (e(), a("g", V, $)) : t(l) === "thin" ? (e(), a("g", j, D)) : y("", !0)
    ], 16, f));
  }
});
export {
  I as default
};
