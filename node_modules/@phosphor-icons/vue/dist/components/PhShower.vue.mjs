import { defineComponent as g, inject as i, computed as l, openBlock as o, createElementBlock as e, mergeProps as u, unref as t, renderSlot as M, createCommentVNode as L, createElementVNode as a } from "vue";
const y = ["width", "height", "fill", "transform"], f = { key: 0 }, H = /* @__PURE__ */ a("path", { d: "M76,228a16,16,0,1,1-16-16A16,16,0,0,1,76,228Zm16-48a16,16,0,1,0,16,16A16,16,0,0,0,92,180Zm-64,0a16,16,0,1,0,16,16A16,16,0,0,0,28,180Zm32,0a16,16,0,1,0-16-16A16,16,0,0,0,60,180ZM256,40a12,12,0,0,1-12,12H221L195.4,77.5,181.8,193a20,20,0,0,1-13.3,16.6,21.2,21.2,0,0,1-6.6,1.1,20.2,20.2,0,0,1-14.1-5.9L51.2,108.2A20,20,0,0,1,63,74.2L178.5,60.6l26.7-26.7A19.7,19.7,0,0,1,219.3,28H244A12,12,0,0,1,256,40ZM170.3,85.7,74,97l85,85Z" }, null, -1), w = [
  H
], k = { key: 1 }, S = /* @__PURE__ */ a("path", {
  d: "M184,72,162.6,200.7A8,8,0,0,1,149,205L51,107a8,8,0,0,1,4.3-13.6Z",
  opacity: "0.2"
}, null, -1), v = /* @__PURE__ */ a("path", { d: "M72,228a12,12,0,1,1-12-12A12,12,0,0,1,72,228Zm16-40a12,12,0,1,0,12,12A12,12,0,0,0,88,188Zm-60-4a12,12,0,1,0,12,12A12,12,0,0,0,28,184Zm40-16a12,12,0,1,0-12,12A12,12,0,0,0,68,168ZM256,40a8,8,0,0,1-8,8H219.3L191.5,75.8,170.4,202a15.7,15.7,0,0,1-10.9,12.6,16.2,16.2,0,0,1-4.9.8,16,16,0,0,1-11.2-4.7L45.3,112.6a16,16,0,0,1-3.9-16.1A15.7,15.7,0,0,1,54,85.6L180.2,64.5,208,36.7A15.9,15.9,0,0,1,219.3,32H248A8,8,0,0,1,256,40ZM174.3,81.7,56.6,101.3l98.1,98.1Z" }, null, -1), x = [
  S,
  v
], z = { key: 2 }, C = /* @__PURE__ */ a("path", { d: "M56,180a12,12,0,1,1,12-12A12,12,0,0,1,56,180Zm4,36a12,12,0,1,0,12,12A12,12,0,0,0,60,216ZM28,184a12,12,0,1,0,12,12A12,12,0,0,0,28,184Zm60,4a12,12,0,1,0,12,12A12,12,0,0,0,88,188ZM248,32H219.3A15.9,15.9,0,0,0,208,36.7L180.2,64.5,54,85.6A15.7,15.7,0,0,0,41.4,96.5a16,16,0,0,0,3.9,16.1l98.1,98.1a16,16,0,0,0,11.2,4.7,16.2,16.2,0,0,0,4.9-.8A15.7,15.7,0,0,0,170.4,202L191.5,75.8h0L219.3,48H248a8,8,0,0,0,0-16Z" }, null, -1), B = [
  C
], N = { key: 3 }, b = /* @__PURE__ */ a("path", { d: "M70,228a10,10,0,1,1-10-10A10,10,0,0,1,70,228Zm18-38a10,10,0,1,0,10,10A10,10,0,0,0,88,190Zm-60-4a10,10,0,1,0,10,10A10,10,0,0,0,28,186Zm38-18a10,10,0,1,0-10,10A10,10,0,0,0,66,168ZM254,40a6,6,0,0,1-6,6H219.3a2,2,0,0,0-1.4.6L189.6,74.9,168.5,201.7a14,14,0,0,1-9.6,11,15.5,15.5,0,0,1-4.3.7,13.7,13.7,0,0,1-9.8-4.2l-98.1-98a13.9,13.9,0,0,1-3.4-14.1,14,14,0,0,1,11-9.6L181.1,66.4l28.3-28.3a14.3,14.3,0,0,1,9.9-4.1H248A6,6,0,0,1,254,40ZM176.7,79.3,56.3,99.4a2,2,0,0,0-1.6,1.3,2.3,2.3,0,0,0,.5,2.1l98.1,98a2,2,0,0,0,2,.5,2,2,0,0,0,1.3-1.6Z" }, null, -1), E = [
  b
], P = { key: 4 }, V = /* @__PURE__ */ a("path", { d: "M72,228a12,12,0,1,1-12-12A12,12,0,0,1,72,228Zm16-40a12,12,0,1,0,12,12A12,12,0,0,0,88,188Zm-60-4a12,12,0,1,0,12,12A12,12,0,0,0,28,184Zm40-16a12,12,0,1,0-12,12A12,12,0,0,0,68,168ZM256,40a8,8,0,0,1-8,8H219.3L191.5,75.8,170.4,202a15.7,15.7,0,0,1-10.9,12.6,16.2,16.2,0,0,1-4.9.8,16,16,0,0,1-11.2-4.7L45.3,112.6a16,16,0,0,1-3.9-16.1A15.7,15.7,0,0,1,54,85.6L180.2,64.5,208,36.7A15.9,15.9,0,0,1,219.3,32H248A8,8,0,0,1,256,40ZM174.3,81.7,56.6,101.3l98.1,98.1Z" }, null, -1), W = [
  V
], $ = { key: 5 }, j = /* @__PURE__ */ a("path", { d: "M68,228a8,8,0,1,1-8-8A8,8,0,0,1,68,228Zm20-36a8,8,0,1,0,8,8A8,8,0,0,0,88,192Zm-60-4a8,8,0,1,0,8,8A8,8,0,0,0,28,188Zm36-20a8,8,0,1,0-8,8A8,8,0,0,0,64,168ZM252,40a4,4,0,0,1-4,4H219.3a3.6,3.6,0,0,0-2.8,1.2L187.7,73.9,166.5,201.3a11.9,11.9,0,0,1-8.2,9.5,11.5,11.5,0,0,1-3.7.6,11.9,11.9,0,0,1-8.4-3.6l-98-98a11.9,11.9,0,0,1,6.5-20.3L182.1,68.3l28.7-28.8a11.9,11.9,0,0,1,8.5-3.5H248A4,4,0,0,1,252,40ZM179.1,76.9,56,97.4a4,4,0,0,0-3.2,2.7,4.1,4.1,0,0,0,1,4.1l98,98a4.1,4.1,0,0,0,4.1,1,4,4,0,0,0,2.7-3.2Z" }, null, -1), q = [
  j
], D = {
  name: "PhShower"
}, I = /* @__PURE__ */ g({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const n = c, _ = i("weight", "regular"), h = i("size", "1em"), A = i("color", "currentColor"), m = i("mirrored", !1), s = l(() => n.weight ?? _), r = l(() => n.size ?? h), Z = l(() => n.color ?? A), p = l(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : m ? "scale(-1, 1)" : void 0);
    return (d, F) => (o(), e("svg", u({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(r),
      height: t(r),
      fill: t(Z),
      transform: t(p)
    }, d.$attrs), [
      M(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", f, w)) : t(s) === "duotone" ? (o(), e("g", k, x)) : t(s) === "fill" ? (o(), e("g", z, B)) : t(s) === "light" ? (o(), e("g", N, E)) : t(s) === "regular" ? (o(), e("g", P, W)) : t(s) === "thin" ? (o(), e("g", $, q)) : L("", !0)
    ], 16, y));
  }
});
export {
  I as default
};
