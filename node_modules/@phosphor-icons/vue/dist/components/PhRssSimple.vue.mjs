import { defineComponent as Z, inject as r, computed as c, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as M, createCommentVNode as f, createElementVNode as n } from "vue";
const A = ["width", "height", "fill", "transform"], C = { key: 0 }, w = /* @__PURE__ */ n("path", { d: "M220,200a12,12,0,0,1-24,0c0-77.2-62.8-140-140-140a12,12,0,0,1,0-24C146.4,36,220,109.6,220,200ZM56,108a12,12,0,0,0,0,24,68.1,68.1,0,0,1,68,68,12,12,0,0,0,24,0A92.1,92.1,0,0,0,56,108Zm0,76a16,16,0,1,0,16,16A16,16,0,0,0,56,184Z" }, null, -1), k = [
  w
], S = { key: 1 }, v = /* @__PURE__ */ n("path", { d: "M216,200a8,8,0,0,1-16,0c0-79.4-64.6-144-144-144a8,8,0,0,1,0-16C144.2,40,216,111.8,216,200ZM56,112a8,8,0,0,0,0,16,72.1,72.1,0,0,1,72,72,8,8,0,0,0,16,0A88.1,88.1,0,0,0,56,112Zm0,76a12,12,0,1,0,12,12A12,12,0,0,0,56,188Z" }, null, -1), x = [
  v
], z = { key: 2 }, B = /* @__PURE__ */ n("path", { d: "M68,200a12,12,0,1,1-12-12A12,12,0,0,1,68,200ZM56,40a8,8,0,0,0,0,16c79.4,0,144,64.6,144,144a8,8,0,0,0,16,0C216,111.8,144.2,40,56,40Zm0,72a8,8,0,0,0,0,16,72.1,72.1,0,0,1,72,72,8,8,0,0,0,16,0A88.1,88.1,0,0,0,56,112Z" }, null, -1), N = [
  B
], b = { key: 3 }, E = /* @__PURE__ */ n("path", { d: "M214,200a6,6,0,0,1-12,0c0-80.5-65.5-146-146-146a6,6,0,0,1,0-12C143.1,42,214,112.9,214,200ZM56,114a6,6,0,0,0,0,12,74.1,74.1,0,0,1,74,74,6,6,0,0,0,12,0A86.1,86.1,0,0,0,56,114Zm0,76a10,10,0,1,0,10,10A10,10,0,0,0,56,190Z" }, null, -1), P = [
  E
], V = { key: 4 }, W = /* @__PURE__ */ n("path", { d: "M216,200a8,8,0,0,1-16,0c0-79.4-64.6-144-144-144a8,8,0,0,1,0-16C144.2,40,216,111.8,216,200ZM56,112a8,8,0,0,0,0,16,72.1,72.1,0,0,1,72,72,8,8,0,0,0,16,0A88.1,88.1,0,0,0,56,112Zm0,76a12,12,0,1,0,12,12A12,12,0,0,0,56,188Z" }, null, -1), $ = [
  W
], j = { key: 5 }, R = /* @__PURE__ */ n("path", { d: "M212,200a4,4,0,0,1-8,0c0-81.6-66.4-148-148-148a4,4,0,0,1,0-8C142,44,212,114,212,200ZM56,116a4,4,0,0,0,0,8,76.1,76.1,0,0,1,76,76,4,4,0,0,0,8,0A84.1,84.1,0,0,0,56,116Zm0,76a8,8,0,1,0,8,8A8,8,0,0,0,56,192Z" }, null, -1), q = [
  R
], D = {
  name: "PhRssSimple"
}, H = /* @__PURE__ */ Z({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(l) {
    const i = l, _ = r("weight", "regular"), h = r("size", "1em"), m = r("color", "currentColor"), p = r("mirrored", !1), s = c(() => i.weight ?? _), a = c(() => i.size ?? h), g = c(() => i.color ?? m), u = c(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (d, F) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(g),
      transform: t(u)
    }, d.$attrs), [
      M(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", C, k)) : t(s) === "duotone" ? (o(), e("g", S, x)) : t(s) === "fill" ? (o(), e("g", z, N)) : t(s) === "light" ? (o(), e("g", b, P)) : t(s) === "regular" ? (o(), e("g", V, $)) : t(s) === "thin" ? (o(), e("g", j, q)) : f("", !0)
    ], 16, A));
  }
});
export {
  H as default
};
