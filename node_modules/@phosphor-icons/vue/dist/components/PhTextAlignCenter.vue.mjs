import { defineComponent as Z, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as u, unref as t, renderSlot as y, createCommentVNode as f, createElementVNode as s } from "vue";
const w = ["width", "height", "fill", "transform"], M = { key: 0 }, k = /* @__PURE__ */ s("path", { d: "M28,68A12,12,0,0,1,40,56H216a12,12,0,0,1,0,24H40A12,12,0,0,1,28,68ZM64,96a12,12,0,0,0,0,24H192a12,12,0,0,0,0-24Zm152,40H40a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24Zm-24,40H64a12,12,0,0,0,0,24H192a12,12,0,0,0,0-24Z" }, null, -1), A = [
  k
], x = { key: 1 }, v = /* @__PURE__ */ s("path", { d: "M32,68a8,8,0,0,1,8-8H216a8,8,0,0,1,0,16H40A8,8,0,0,1,32,68Zm32,32a8,8,0,0,0,0,16H192a8,8,0,0,0,0-16Zm152,40H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Zm-24,40H64a8,8,0,0,0,0,16H192a8,8,0,0,0,0-16Z" }, null, -1), C = [
  v
], S = { key: 2 }, z = /* @__PURE__ */ s("path", { d: "M32,68a8,8,0,0,1,8-8H216a8,8,0,0,1,0,16H40A8,8,0,0,1,32,68Zm32,32a8,8,0,0,0,0,16H192a8,8,0,0,0,0-16Zm152,40H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Zm-24,40H64a8,8,0,0,0,0,16H192a8,8,0,0,0,0-16Z" }, null, -1), B = [
  z
], N = { key: 3 }, b = /* @__PURE__ */ s("path", { d: "M34,68a6,6,0,0,1,6-6H216a6,6,0,0,1,0,12H40A6,6,0,0,1,34,68Zm30,34a6,6,0,0,0,0,12H192a6,6,0,0,0,0-12Zm152,40H40a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12Zm-24,40H64a6,6,0,0,0,0,12H192a6,6,0,0,0,0-12Z" }, null, -1), E = [
  b
], P = { key: 4 }, V = /* @__PURE__ */ s("path", { d: "M32,68a8,8,0,0,1,8-8H216a8,8,0,0,1,0,16H40A8,8,0,0,1,32,68Zm32,32a8,8,0,0,0,0,16H192a8,8,0,0,0,0-16Zm152,40H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Zm-24,40H64a8,8,0,0,0,0,16H192a8,8,0,0,0,0-16Z" }, null, -1), W = [
  V
], $ = { key: 5 }, j = /* @__PURE__ */ s("path", { d: "M36,68a4,4,0,0,1,4-4H216a4,4,0,0,1,0,8H40A4,4,0,0,1,36,68Zm28,36a4,4,0,0,0,0,8H192a4,4,0,0,0,0-8Zm152,40H40a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8Zm-24,40H64a4,4,0,0,0,0,8H192a4,4,0,0,0,0-8Z" }, null, -1), T = [
  j
], q = {
  name: "PhTextAlignCenter"
}, G = /* @__PURE__ */ Z({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(l) {
    const n = l, _ = i("weight", "regular"), H = i("size", "1em"), h = i("color", "currentColor"), m = i("mirrored", !1), a = r(() => n.weight ?? _), d = r(() => n.size ?? H), p = r(() => n.color ?? h), g = r(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : m ? "scale(-1, 1)" : void 0);
    return (c, D) => (o(), e("svg", u({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(p),
      transform: t(g)
    }, c.$attrs), [
      y(c.$slots, "default"),
      t(a) === "bold" ? (o(), e("g", M, A)) : t(a) === "duotone" ? (o(), e("g", x, C)) : t(a) === "fill" ? (o(), e("g", S, B)) : t(a) === "light" ? (o(), e("g", N, E)) : t(a) === "regular" ? (o(), e("g", P, W)) : t(a) === "thin" ? (o(), e("g", $, T)) : f("", !0)
    ], 16, w));
  }
});
export {
  G as default
};
