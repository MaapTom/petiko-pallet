import { defineComponent as y, inject as r, computed as l, openBlock as e, createElementBlock as s, mergeProps as M, unref as t, renderSlot as f, createCommentVNode as A, createElementVNode as o } from "vue";
const Z = ["width", "height", "fill", "transform"], w = { key: 0 }, k = /* @__PURE__ */ o("path", { d: "M232.5,215.5l-40.7-40.7A94.9,94.9,0,0,0,212,116a96,96,0,1,0-96,96,94.9,94.9,0,0,0,58.8-20.2l40.7,40.7a12.1,12.1,0,0,0,17,0A12,12,0,0,0,232.5,215.5ZM44,116a72,72,0,1,1,72,72A72.1,72.1,0,0,1,44,116Z" }, null, -1), x = [
  k
], v = { key: 1 }, S = /* @__PURE__ */ o("g", { opacity: "0.2" }, [
  /* @__PURE__ */ o("circle", {
    cx: "116",
    cy: "116",
    r: "84"
  })
], -1), z = /* @__PURE__ */ o("path", { d: "M229.7,218.3l-43.3-43.2a92.2,92.2,0,1,0-11.3,11.3l43.2,43.3a8.2,8.2,0,0,0,11.4,0A8.1,8.1,0,0,0,229.7,218.3ZM40,116a76,76,0,1,1,76,76A76.1,76.1,0,0,1,40,116Z" }, null, -1), C = [
  S,
  z
], B = { key: 2 }, N = /* @__PURE__ */ o("path", { d: "M176,116a60,60,0,1,1-60-60A60,60,0,0,1,176,116Zm53.7,113.7a8.2,8.2,0,0,1-11.4,0l-43.2-43.3a92.2,92.2,0,1,1,11.3-11.3l43.3,43.2A8.1,8.1,0,0,1,229.7,229.7ZM116,192a76,76,0,1,0-76-76A76.1,76.1,0,0,0,116,192Z" }, null, -1), b = [
  N
], E = { key: 3 }, P = /* @__PURE__ */ o("path", { d: "M228.2,219.8l-44.5-44.6a90.2,90.2,0,1,0-8.5,8.5l44.6,44.5a5.9,5.9,0,0,0,8.4-8.4ZM38,116a78,78,0,1,1,78,78A78.1,78.1,0,0,1,38,116Z" }, null, -1), V = [
  P
], W = { key: 4 }, $ = /* @__PURE__ */ o("path", { d: "M229.7,218.3l-43.3-43.2a92.2,92.2,0,1,0-11.3,11.3l43.2,43.3a8.2,8.2,0,0,0,11.4,0A8.1,8.1,0,0,0,229.7,218.3ZM40,116a76,76,0,1,1,76,76A76.1,76.1,0,0,1,40,116Z" }, null, -1), j = [
  $
], G = { key: 5 }, q = /* @__PURE__ */ o("path", { d: "M226.8,221.2,181,175.3a88,88,0,1,0-5.7,5.7l45.9,45.8a3.9,3.9,0,0,0,5.6,0A3.9,3.9,0,0,0,226.8,221.2ZM36,116a80,80,0,1,1,80,80A80.1,80.1,0,0,1,36,116Z" }, null, -1), D = [
  q
], F = {
  name: "PhMagnifyingGlass"
}, J = /* @__PURE__ */ y({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const i = d, _ = r("weight", "regular"), h = r("size", "1em"), p = r("color", "currentColor"), g = r("mirrored", !1), n = l(() => i.weight ?? _), c = l(() => i.size ?? h), m = l(() => i.color ?? p), u = l(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (a, H) => (e(), s("svg", M({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(c),
      height: t(c),
      fill: t(m),
      transform: t(u)
    }, a.$attrs), [
      f(a.$slots, "default"),
      t(n) === "bold" ? (e(), s("g", w, x)) : t(n) === "duotone" ? (e(), s("g", v, C)) : t(n) === "fill" ? (e(), s("g", B, b)) : t(n) === "light" ? (e(), s("g", E, V)) : t(n) === "regular" ? (e(), s("g", W, j)) : t(n) === "thin" ? (e(), s("g", G, D)) : A("", !0)
    ], 16, Z));
  }
});
export {
  J as default
};
