import { defineComponent as A, inject as r, computed as c, openBlock as o, createElementBlock as e, mergeProps as Z, unref as t, renderSlot as y, createCommentVNode as f, createElementVNode as n } from "vue";
const M = ["width", "height", "fill", "transform"], w = { key: 0 }, k = /* @__PURE__ */ n("path", { d: "M144,192a16,16,0,1,1-16-16A16,16,0,0,1,144,192ZM128,80a16,16,0,1,0-16-16A16,16,0,0,0,128,80Zm0,32a16,16,0,1,0,16,16A16,16,0,0,0,128,112Z" }, null, -1), v = [
  k
], x = { key: 1 }, S = /* @__PURE__ */ n("path", { d: "M140,192a12,12,0,1,1-12-12A12,12,0,0,1,140,192ZM128,76a12,12,0,1,0-12-12A12,12,0,0,0,128,76Zm0,40a12,12,0,1,0,12,12A12,12,0,0,0,128,116Z" }, null, -1), z = [
  S
], C = { key: 2 }, B = /* @__PURE__ */ n("path", { d: "M116,64a12,12,0,1,1,12,12A12,12,0,0,1,116,64Zm12,52a12,12,0,1,0,12,12A12,12,0,0,0,128,116Zm0,64a12,12,0,1,0,12,12A12,12,0,0,0,128,180Z" }, null, -1), N = [
  B
], V = { key: 3 }, b = /* @__PURE__ */ n("path", { d: "M138,192a10,10,0,1,1-10-10A10,10,0,0,1,138,192ZM128,74a10,10,0,1,0-10-10A10,10,0,0,0,128,74Zm0,44a10,10,0,1,0,10,10A10,10,0,0,0,128,118Z" }, null, -1), E = [
  b
], P = { key: 4 }, W = /* @__PURE__ */ n("path", { d: "M140,192a12,12,0,1,1-12-12A12,12,0,0,1,140,192ZM128,76a12,12,0,1,0-12-12A12,12,0,0,0,128,76Zm0,40a12,12,0,1,0,12,12A12,12,0,0,0,128,116Z" }, null, -1), $ = [
  W
], j = { key: 5 }, D = /* @__PURE__ */ n("path", { d: "M136,192a8,8,0,1,1-8-8A8,8,0,0,1,136,192ZM128,72a8,8,0,1,0-8-8A8,8,0,0,0,128,72Zm0,48a8,8,0,1,0,8,8A8,8,0,0,0,128,120Z" }, null, -1), T = [
  D
], q = {
  name: "PhDotsThreeVertical"
}, H = /* @__PURE__ */ A({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(l) {
    const i = l, _ = r("weight", "regular"), h = r("size", "1em"), m = r("color", "currentColor"), p = r("mirrored", !1), s = c(() => i.weight ?? _), d = c(() => i.size ?? h), g = c(() => i.color ?? m), u = c(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (a, F) => (o(), e("svg", Z({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(g),
      transform: t(u)
    }, a.$attrs), [
      y(a.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", w, v)) : t(s) === "duotone" ? (o(), e("g", x, z)) : t(s) === "fill" ? (o(), e("g", C, N)) : t(s) === "light" ? (o(), e("g", V, E)) : t(s) === "regular" ? (o(), e("g", P, $)) : t(s) === "thin" ? (o(), e("g", j, T)) : f("", !0)
    ], 16, M));
  }
});
export {
  H as default
};
