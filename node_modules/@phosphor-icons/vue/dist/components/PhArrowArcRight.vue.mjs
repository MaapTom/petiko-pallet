import { defineComponent as y, inject as i, computed as l, openBlock as o, createElementBlock as e, mergeProps as f, unref as t, renderSlot as v, createCommentVNode as w, createElementVNode as n } from "vue";
const A = ["width", "height", "fill", "transform"], k = { key: 0 }, M = /* @__PURE__ */ n("path", { d: "M239.9,84.1v64a12,12,0,0,1-12,12h-64a12,12,0,0,1,0-24h35l-11.5-11.5A84,84,0,0,0,44,184a12,12,0,0,1-24,0,108,108,0,0,1,184.4-76.4l11.5,11.5v-35a12,12,0,0,1,24,0Z" }, null, -1), x = [
  M
], S = { key: 1 }, V = /* @__PURE__ */ n("path", { d: "M235.9,84.1v64a8,8,0,0,1-8,8h-64a8,8,0,0,1,0-16h44.7l-18.4-18.3A88,88,0,0,0,40,184a8,8,0,0,1-16,0A104.1,104.1,0,0,1,128,80a102.9,102.9,0,0,1,73.5,30.5l18.4,18.3V84.1a8,8,0,0,1,16,0Z" }, null, -1), Z = [
  V
], z = { key: 2 }, C = /* @__PURE__ */ n("path", { d: "M235.9,84.1v64a8,8,0,0,1-8,8h-64a7.9,7.9,0,0,1-7.4-4.9,8,8,0,0,1,1.7-8.7l26.1-26.1A88,88,0,0,0,40,184a8,8,0,0,1-16,0A104.1,104.1,0,0,1,128,80a103.3,103.3,0,0,1,67.7,25l26.5-26.5a8,8,0,0,1,13.7,5.6Z" }, null, -1), B = [
  C
], N = { key: 3 }, b = /* @__PURE__ */ n("path", { d: "M233.9,84.1v64a6,6,0,0,1-6,6h-64a6,6,0,0,1,0-12h49.5l-21.8-21.7A90,90,0,0,0,38,184a6,6,0,0,1-12,0,102,102,0,0,1,174.1-72.1l21.8,21.7V84.1a6,6,0,0,1,12,0Z" }, null, -1), E = [
  b
], P = { key: 4 }, W = /* @__PURE__ */ n("path", { d: "M235.9,84.1v64a8,8,0,0,1-8,8h-64a8,8,0,0,1,0-16h44.7l-18.4-18.3A88,88,0,0,0,40,184a8,8,0,0,1-16,0A104.1,104.1,0,0,1,128,80a102.9,102.9,0,0,1,73.5,30.5l18.4,18.3V84.1a8,8,0,0,1,16,0Z" }, null, -1), $ = [
  W
], j = { key: 5 }, R = /* @__PURE__ */ n("path", { d: "M231.9,84.1v64a4,4,0,0,1-4,4h-64a4,4,0,0,1,0-8h54.3l-25.1-25.2A92,92,0,0,0,36,184a4,4,0,0,1-8,0,100,100,0,0,1,170.7-70.7l25.2,25.2V84.1a4,4,0,0,1,8,0Z" }, null, -1), q = [
  R
], D = {
  name: "PhArrowArcRight"
}, H = /* @__PURE__ */ y({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const r = c, d = i("weight", "regular"), _ = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), s = l(() => r.weight ?? d), a = l(() => r.size ?? _), m = l(() => r.color ?? p), u = l(() => r.mirrored !== void 0 ? r.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (h, F) => (o(), e("svg", f({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(m),
      transform: t(u)
    }, h.$attrs), [
      v(h.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", k, x)) : t(s) === "duotone" ? (o(), e("g", S, Z)) : t(s) === "fill" ? (o(), e("g", z, B)) : t(s) === "light" ? (o(), e("g", N, E)) : t(s) === "regular" ? (o(), e("g", P, $)) : t(s) === "thin" ? (o(), e("g", j, q)) : w("", !0)
    ], 16, A));
  }
});
export {
  H as default
};
