import { defineComponent as g, inject as n, computed as i, openBlock as e, createElementBlock as a, mergeProps as H, unref as t, renderSlot as u, createCommentVNode as Z, createElementVNode as o } from "vue";
const V = ["width", "height", "fill", "transform"], y = { key: 0 }, M = /* @__PURE__ */ o("path", { d: "M157.3,21.2a12.2,12.2,0,0,0-12.7,1.3L75.9,76H32A20.1,20.1,0,0,0,12,96v64a20.1,20.1,0,0,0,20,20H75.9l68.7,53.5A12.7,12.7,0,0,0,152,236a12.4,12.4,0,0,0,5.3-1.2A12,12,0,0,0,164,224V32A12,12,0,0,0,157.3,21.2ZM140,199.5l-52.6-41A12.2,12.2,0,0,0,80,156H36V100H80a12.2,12.2,0,0,0,7.4-2.5l52.6-41Zm108.5-56a12,12,0,0,1,0,17,12.1,12.1,0,0,1-17,0L216,145l-15.5,15.5a12.1,12.1,0,0,1-17,0,12,12,0,0,1,0-17L199,128l-15.5-15.5a12,12,0,0,1,17-17L216,111l15.5-15.5a12,12,0,0,1,17,17L233,128Z" }, null, -1), f = [
  M
], v = { key: 1 }, w = /* @__PURE__ */ o("g", { opacity: "0.2" }, [
  /* @__PURE__ */ o("path", { d: "M80,168H32a8,8,0,0,1-8-8V96a8,8,0,0,1,8-8H80l72-56V224Z" })
], -1), k = /* @__PURE__ */ o("path", { d: "M155.5,24.8a8,8,0,0,0-8.4.9L77.3,80H32A16,16,0,0,0,16,96v64a16,16,0,0,0,16,16H77.3l69.8,54.3A8.1,8.1,0,0,0,152,232a8.5,8.5,0,0,0,3.5-.8A8,8,0,0,0,160,224V32A8,8,0,0,0,155.5,24.8ZM144,207.6,84.9,161.7A7.9,7.9,0,0,0,80,160H32V96H80a7.9,7.9,0,0,0,4.9-1.7L144,48.4Z" }, null, -1), S = /* @__PURE__ */ o("path", { d: "M227.3,128l18.4-18.3a8.1,8.1,0,0,0-11.4-11.4L216,116.7,197.7,98.3a8.1,8.1,0,0,0-11.4,11.4L204.7,128l-18.4,18.3a8.1,8.1,0,0,0,0,11.4,8.2,8.2,0,0,0,11.4,0L216,139.3l18.3,18.4a8.2,8.2,0,0,0,11.4,0,8.1,8.1,0,0,0,0-11.4Z" }, null, -1), x = [
  w,
  k,
  S
], z = { key: 2 }, C = /* @__PURE__ */ o("path", { d: "M160,32V224a8,8,0,0,1-4.5,7.2,8.5,8.5,0,0,1-3.5.8,7.9,7.9,0,0,1-4.9-1.7L77.2,176H32a16,16,0,0,1-16-16V96A16,16,0,0,1,32,80H77.2l69.9-54.3A8,8,0,0,1,160,32Zm67.3,96,18.4-18.3a8.1,8.1,0,0,0-11.4-11.4L216,116.7,197.7,98.3a8.1,8.1,0,0,0-11.4,11.4L204.7,128l-18.4,18.3a8.1,8.1,0,0,0,0,11.4A8.3,8.3,0,0,0,192,160a8.5,8.5,0,0,0,5.7-2.3L216,139.3l18.3,18.4A8.3,8.3,0,0,0,240,160a8.5,8.5,0,0,0,5.7-2.3,8.1,8.1,0,0,0,0-11.4Z" }, null, -1), B = [
  C
], N = { key: 3 }, b = /* @__PURE__ */ o("path", { d: "M154.6,26.6a6,6,0,0,0-6.3.7L77.9,82H32A14,14,0,0,0,18,96v64a14,14,0,0,0,14,14H77.9l70.4,54.7A5.8,5.8,0,0,0,152,230a5.8,5.8,0,0,0,2.6-.6A6,6,0,0,0,158,224V32A6,6,0,0,0,154.6,26.6ZM146,211.7,83.7,163.3A5.8,5.8,0,0,0,80,162H32a2,2,0,0,1-2-2V96a2,2,0,0,1,2-2H80a5.8,5.8,0,0,0,3.7-1.3L146,44.3Zm98.2-63.9a5.9,5.9,0,1,1-8.4,8.4L216,136.5l-19.8,19.7a5.9,5.9,0,0,1-8.4-8.4L207.5,128l-19.7-19.8a5.9,5.9,0,0,1,8.4-8.4L216,119.5l19.8-19.7a5.9,5.9,0,0,1,8.4,8.4L224.5,128Z" }, null, -1), E = [
  b
], P = { key: 4 }, W = /* @__PURE__ */ o("path", { d: "M155.5,24.8a8,8,0,0,0-8.4.9L77.3,80H32A16,16,0,0,0,16,96v64a16,16,0,0,0,16,16H77.3l69.8,54.3A8.1,8.1,0,0,0,152,232a8.5,8.5,0,0,0,3.5-.8A8,8,0,0,0,160,224V32A8,8,0,0,0,155.5,24.8ZM144,207.6,84.9,161.7A7.9,7.9,0,0,0,80,160H32V96H80a7.9,7.9,0,0,0,4.9-1.7L144,48.4Zm101.7-61.3a8.1,8.1,0,0,1,0,11.4,8.2,8.2,0,0,1-11.4,0L216,139.3l-18.3,18.4a8.2,8.2,0,0,1-11.4,0,8.1,8.1,0,0,1,0-11.4L204.7,128l-18.4-18.3a8.1,8.1,0,0,1,11.4-11.4L216,116.7l18.3-18.4a8.1,8.1,0,0,1,11.4,11.4L227.3,128Z" }, null, -1), $ = [
  W
], j = { key: 5 }, X = /* @__PURE__ */ o("path", { d: "M153.8,28.4a4.2,4.2,0,0,0-4.3.4L78.6,84H32A12,12,0,0,0,20,96v64a12,12,0,0,0,12,12H78.6l70.9,55.2a4.6,4.6,0,0,0,2.5.8,3.9,3.9,0,0,0,1.8-.4A4.2,4.2,0,0,0,156,224V32A4.2,4.2,0,0,0,153.8,28.4ZM148,215.8l-65.5-51A4.4,4.4,0,0,0,80,164H32a4,4,0,0,1-4-4V96a4,4,0,0,1,4-4H80a4.4,4.4,0,0,0,2.5-.8l65.5-51Zm94.8-66.6a3.9,3.9,0,0,1,0,5.6,3.9,3.9,0,0,1-5.6,0L216,133.7l-21.2,21.1a3.9,3.9,0,0,1-5.6,0,3.9,3.9,0,0,1,0-5.6L210.3,128l-21.1-21.2a4,4,0,0,1,5.6-5.6L216,122.3l21.2-21.1a4,4,0,1,1,5.6,5.6L221.7,128Z" }, null, -1), q = [
  X
], D = {
  name: "PhSpeakerSimpleX"
}, I = /* @__PURE__ */ g({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const s = c, _ = n("weight", "regular"), h = n("size", "1em"), p = n("color", "currentColor"), L = n("mirrored", !1), l = i(() => s.weight ?? _), r = i(() => s.size ?? h), A = i(() => s.color ?? p), m = i(() => s.mirrored !== void 0 ? s.mirrored ? "scale(-1, 1)" : void 0 : L ? "scale(-1, 1)" : void 0);
    return (d, F) => (e(), a("svg", H({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(r),
      height: t(r),
      fill: t(A),
      transform: t(m)
    }, d.$attrs), [
      u(d.$slots, "default"),
      t(l) === "bold" ? (e(), a("g", y, f)) : t(l) === "duotone" ? (e(), a("g", v, x)) : t(l) === "fill" ? (e(), a("g", z, B)) : t(l) === "light" ? (e(), a("g", N, E)) : t(l) === "regular" ? (e(), a("g", P, $)) : t(l) === "thin" ? (e(), a("g", j, q)) : Z("", !0)
    ], 16, V));
  }
});
export {
  I as default
};
