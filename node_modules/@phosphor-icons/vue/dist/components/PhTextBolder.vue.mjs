import { defineComponent as H, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as Z, unref as t, renderSlot as y, createCommentVNode as M, createElementVNode as n } from "vue";
const V = ["width", "height", "fill", "transform"], f = { key: 0 }, w = /* @__PURE__ */ n("path", { d: "M177.1,114.5A48,48,0,0,0,140,36H64A12,12,0,0,0,52,48V200a12,12,0,0,0,12,12h88a52,52,0,0,0,25.1-97.5ZM76,60h64a24,24,0,0,1,0,48H76Zm76,128H76V132h76a28,28,0,0,1,0,56Z" }, null, -1), k = [
  w
], x = { key: 1 }, A = /* @__PURE__ */ n("path", { d: "M170.5,115.7A44,44,0,0,0,140,40H64a7.9,7.9,0,0,0-8,8V200a8,8,0,0,0,8,8h88a48,48,0,0,0,18.5-92.3ZM72,56h68a28,28,0,0,1,0,56H72Zm80,136H72V128h80a32,32,0,0,1,0,64Z" }, null, -1), v = [
  A
], S = { key: 2 }, z = /* @__PURE__ */ n("path", { d: "M170.5,115.7A44,44,0,0,0,140,40H64a7.9,7.9,0,0,0-8,8V200a8,8,0,0,0,8,8h88a48,48,0,0,0,18.5-92.3ZM72,56h68a28,28,0,0,1,0,56H72Zm80,136H72V128h80a32,32,0,0,1,0,64Z" }, null, -1), B = [
  z
], C = { key: 3 }, N = /* @__PURE__ */ n("path", { d: "M166.7,116.4A42,42,0,0,0,140,42H64a6.2,6.2,0,0,0-6,6V200a6,6,0,0,0,6,6h88a46,46,0,0,0,14.7-89.6ZM70,54h70a30,30,0,0,1,0,60H70Zm82,140H70V126h82a34,34,0,0,1,0,68Z" }, null, -1), b = [
  N
], E = { key: 4 }, P = /* @__PURE__ */ n("path", { d: "M170.5,115.7A44,44,0,0,0,140,40H64a7.9,7.9,0,0,0-8,8V200a8,8,0,0,0,8,8h88a48,48,0,0,0,18.5-92.3ZM72,56h68a28,28,0,0,1,0,56H72Zm80,136H72V128h80a32,32,0,0,1,0,64Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ n("path", { d: "M162.3,117.2A40,40,0,0,0,140,44H64a4.1,4.1,0,0,0-4,4V200a4,4,0,0,0,4,4h88a44,44,0,0,0,10.3-86.8ZM68,52h72a32,32,0,0,1,0,64H68Zm84,144H68V124h84a36,36,0,0,1,0,72Z" }, null, -1), T = [
  j
], q = {
  name: "PhTextBolder"
}, G = /* @__PURE__ */ H({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const h = c, l = i("weight", "regular"), _ = i("size", "1em"), m = i("color", "currentColor"), p = i("mirrored", !1), s = r(() => h.weight ?? l), a = r(() => h.size ?? _), g = r(() => h.color ?? m), u = r(() => h.mirrored !== void 0 ? h.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (d, D) => (o(), e("svg", Z({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(g),
      transform: t(u)
    }, d.$attrs), [
      y(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", f, k)) : t(s) === "duotone" ? (o(), e("g", x, v)) : t(s) === "fill" ? (o(), e("g", S, B)) : t(s) === "light" ? (o(), e("g", C, b)) : t(s) === "regular" ? (o(), e("g", E, W)) : t(s) === "thin" ? (o(), e("g", $, T)) : M("", !0)
    ], 16, V));
  }
});
export {
  G as default
};
