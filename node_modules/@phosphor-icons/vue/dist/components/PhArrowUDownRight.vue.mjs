import { defineComponent as H, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as A, unref as t, renderSlot as y, createCommentVNode as f, createElementVNode as n } from "vue";
const w = ["width", "height", "fill", "transform"], k = { key: 0 }, M = /* @__PURE__ */ n("path", { d: "M232.5,176.5l-48,48a12.1,12.1,0,0,1-17,0,12,12,0,0,1,0-17L195,180H88A68,68,0,0,1,88,44h88a12,12,0,0,1,0,24H88a44,44,0,0,0,0,88H195l-27.5-27.5a12,12,0,0,1,17-17l48,48A12,12,0,0,1,232.5,176.5Z" }, null, -1), v = [
  M
], x = { key: 1 }, S = /* @__PURE__ */ n("path", { d: "M229.7,173.7l-48,48a8.2,8.2,0,0,1-11.4,0,8.1,8.1,0,0,1,0-11.4L204.7,176H88A64,64,0,0,1,88,48h88a8,8,0,0,1,0,16H88a48,48,0,0,0,0,96H204.7l-34.4-34.3a8.1,8.1,0,0,1,11.4-11.4l48,48A8.1,8.1,0,0,1,229.7,173.7Z" }, null, -1), Z = [
  S
], z = { key: 2 }, C = /* @__PURE__ */ n("path", { d: "M229.7,173.7l-48,48A8.3,8.3,0,0,1,176,224a8.5,8.5,0,0,1-3.1-.6A8,8,0,0,1,168,216V176H88A64,64,0,0,1,88,48h88a8,8,0,0,1,0,16H88a48,48,0,0,0,0,96h80V120a8,8,0,0,1,4.9-7.4,8.4,8.4,0,0,1,8.8,1.7l48,48A8.1,8.1,0,0,1,229.7,173.7Z" }, null, -1), L = [
  C
], B = { key: 3 }, V = /* @__PURE__ */ n("path", { d: "M228.2,172.2l-48,48a5.9,5.9,0,0,1-8.4-8.4L209.5,174H88A62,62,0,0,1,88,50h88a6,6,0,0,1,0,12H88a50,50,0,0,0,0,100H209.5l-37.7-37.8a5.9,5.9,0,0,1,8.4-8.4l48,48A5.8,5.8,0,0,1,228.2,172.2Z" }, null, -1), N = [
  V
], b = { key: 4 }, E = /* @__PURE__ */ n("path", { d: "M229.7,173.7l-48,48a8.2,8.2,0,0,1-11.4,0,8.1,8.1,0,0,1,0-11.4L204.7,176H88A64,64,0,0,1,88,48h88a8,8,0,0,1,0,16H88a48,48,0,0,0,0,96H204.7l-34.4-34.3a8.1,8.1,0,0,1,11.4-11.4l48,48A8.1,8.1,0,0,1,229.7,173.7Z" }, null, -1), P = [
  E
], W = { key: 5 }, $ = /* @__PURE__ */ n("path", { d: "M226.8,170.8l-48,48a3.9,3.9,0,0,1-5.6,0,3.9,3.9,0,0,1,0-5.6L214.3,172H88A60,60,0,0,1,88,52h88a4,4,0,0,1,0,8H88a52,52,0,0,0,0,104H214.3l-41.1-41.2a4,4,0,0,1,5.6-5.6l48,48A3.9,3.9,0,0,1,226.8,170.8Z" }, null, -1), j = [
  $
], D = {
  name: "PhArrowUDownRight"
}, q = /* @__PURE__ */ H({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const l = c, h = i("weight", "regular"), _ = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), s = r(() => l.weight ?? h), a = r(() => l.size ?? _), m = r(() => l.color ?? p), u = r(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, R) => (o(), e("svg", A({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(m),
      transform: t(u)
    }, d.$attrs), [
      y(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", k, v)) : t(s) === "duotone" ? (o(), e("g", x, Z)) : t(s) === "fill" ? (o(), e("g", z, L)) : t(s) === "light" ? (o(), e("g", B, N)) : t(s) === "regular" ? (o(), e("g", b, P)) : t(s) === "thin" ? (o(), e("g", W, j)) : f("", !0)
    ], 16, w));
  }
});
export {
  q as default
};
