import { defineComponent as p, inject as i, computed as m, openBlock as a, createElementBlock as e, mergeProps as V, unref as t, renderSlot as g, createCommentVNode as u, createElementVNode as o } from "vue";
const y = ["width", "height", "fill", "transform"], M = { key: 0 }, f = /* @__PURE__ */ o("path", { d: "M200,20H56A20.1,20.1,0,0,0,36,40V216a20.1,20.1,0,0,0,20,20H200a20.1,20.1,0,0,0,20-20V40A20.1,20.1,0,0,0,200,20Zm-4,192H60V44H196ZM80,76A12,12,0,0,1,92,64h72a12,12,0,0,1,0,24H92A12,12,0,0,1,80,76Zm88,52a16,16,0,1,1-16-16A16,16,0,0,1,168,128Zm0,48a16,16,0,1,1-16-16A16,16,0,0,1,168,176Zm-48-48a16,16,0,1,1-16-16A16,16,0,0,1,120,128Zm0,48a16,16,0,1,1-16-16A16,16,0,0,1,120,176Z" }, null, -1), v = [
  f
], w = { key: 1 }, k = /* @__PURE__ */ o("g", { opacity: "0.2" }, [
  /* @__PURE__ */ o("rect", {
    x: "80",
    y: "64",
    width: "96",
    height: "48"
  })
], -1), x = /* @__PURE__ */ o("path", { d: "M80,120h96a8,8,0,0,0,8-8V64a8,8,0,0,0-8-8H80a8,8,0,0,0-8,8v48A8,8,0,0,0,80,120Zm8-48h80v32H88ZM200,24H56A16,16,0,0,0,40,40V216a16,16,0,0,0,16,16H200a16,16,0,0,0,16-16V40A16,16,0,0,0,200,24Zm0,192H56V40H200Zm-60-68a12,12,0,1,1-12-12A12,12,0,0,1,140,148Zm0,40a12,12,0,1,1-12-12A12,12,0,0,1,140,188Zm-40-40a12,12,0,1,1-12-12A12,12,0,0,1,100,148Zm0,40a12,12,0,1,1-12-12A12,12,0,0,1,100,188Zm80-40a12,12,0,1,1-12-12A12,12,0,0,1,180,148Zm0,40a12,12,0,1,1-12-12A12,12,0,0,1,180,188Z" }, null, -1), C = [
  k,
  x
], S = { key: 2 }, z = /* @__PURE__ */ o("path", { d: "M200,24H56A16,16,0,0,0,40,40V216a16,16,0,0,0,16,16H200a16,16,0,0,0,16-16V40A16,16,0,0,0,200,24ZM88,200a12,12,0,1,1,12-12A12,12,0,0,1,88,200Zm0-40a12,12,0,1,1,12-12A12,12,0,0,1,88,160Zm40,40a12,12,0,1,1,12-12A12,12,0,0,1,128,200Zm0-40a12,12,0,1,1,12-12A12,12,0,0,1,128,160Zm40,40a12,12,0,1,1,12-12A12,12,0,0,1,168,200Zm0-40a12,12,0,1,1,12-12A12,12,0,0,1,168,160Zm16-56a8,8,0,0,1-8,8H80a8,8,0,0,1-8-8V64a8,8,0,0,1,8-8h96a8,8,0,0,1,8,8Z" }, null, -1), B = [
  z
], N = { key: 3 }, b = /* @__PURE__ */ o("path", { d: "M176,58H80a6,6,0,0,0-6,6v48a6,6,0,0,0,6,6h96a6,6,0,0,0,6-6V64A6,6,0,0,0,176,58Zm-6,48H86V70h84Zm30-80H56A14,14,0,0,0,42,40V216a14,14,0,0,0,14,14H200a14,14,0,0,0,14-14V40A14,14,0,0,0,200,26Zm2,190a2,2,0,0,1-2,2H56a2,2,0,0,1-2-2V40a2,2,0,0,1,2-2H200a2,2,0,0,1,2,2Zm-64-68a10,10,0,1,1-10-10A10,10,0,0,1,138,148Zm0,40a10,10,0,1,1-10-10A10,10,0,0,1,138,188ZM98,148a10,10,0,1,1-10-10A10,10,0,0,1,98,148Zm0,40a10,10,0,1,1-10-10A10,10,0,0,1,98,188Zm80-40a10,10,0,1,1-10-10A10,10,0,0,1,178,148Zm0,40a10,10,0,1,1-10-10A10,10,0,0,1,178,188Z" }, null, -1), E = [
  b
], P = { key: 4 }, W = /* @__PURE__ */ o("path", { d: "M80,120h96a8,8,0,0,0,8-8V64a8,8,0,0,0-8-8H80a8,8,0,0,0-8,8v48A8,8,0,0,0,80,120Zm8-48h80v32H88ZM200,24H56A16,16,0,0,0,40,40V216a16,16,0,0,0,16,16H200a16,16,0,0,0,16-16V40A16,16,0,0,0,200,24Zm0,192H56V40H200Zm-60-68a12,12,0,1,1-12-12A12,12,0,0,1,140,148Zm0,40a12,12,0,1,1-12-12A12,12,0,0,1,140,188Zm-40-40a12,12,0,1,1-12-12A12,12,0,0,1,100,148Zm0,40a12,12,0,1,1-12-12A12,12,0,0,1,100,188Zm80-40a12,12,0,1,1-12-12A12,12,0,0,1,180,148Zm0,40a12,12,0,1,1-12-12A12,12,0,0,1,180,188Z" }, null, -1), $ = [
  W
], j = { key: 5 }, q = /* @__PURE__ */ o("path", { d: "M176,60H80a4,4,0,0,0-4,4v48a4,4,0,0,0,4,4h96a4,4,0,0,0,4-4V64A4,4,0,0,0,176,60Zm-4,48H84V68h88Zm28-80H56A12,12,0,0,0,44,40V216a12,12,0,0,0,12,12H200a12,12,0,0,0,12-12V40A12,12,0,0,0,200,28Zm4,188a4,4,0,0,1-4,4H56a4,4,0,0,1-4-4V40a4,4,0,0,1,4-4H200a4,4,0,0,1,4,4Zm-68-68a8,8,0,1,1-8-8A8,8,0,0,1,136,148Zm0,40a8,8,0,1,1-8-8A8,8,0,0,1,136,188ZM96,148a8,8,0,1,1-8-8A8,8,0,0,1,96,148Zm0,40a8,8,0,1,1-8-8A8,8,0,0,1,96,188Zm80-40a8,8,0,1,1-8-8A8,8,0,0,1,176,148Zm0,40a8,8,0,1,1-8-8A8,8,0,0,1,176,188Z" }, null, -1), D = [
  q
], F = {
  name: "PhCalculator"
}, J = /* @__PURE__ */ p({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(Z) {
    const n = Z, c = i("weight", "regular"), d = i("size", "1em"), A = i("color", "currentColor"), l = i("mirrored", !1), s = m(() => n.weight ?? c), r = m(() => n.size ?? d), _ = m(() => n.color ?? A), H = m(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : l ? "scale(-1, 1)" : void 0);
    return (h, G) => (a(), e("svg", V({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(r),
      height: t(r),
      fill: t(_),
      transform: t(H)
    }, h.$attrs), [
      g(h.$slots, "default"),
      t(s) === "bold" ? (a(), e("g", M, v)) : t(s) === "duotone" ? (a(), e("g", w, C)) : t(s) === "fill" ? (a(), e("g", S, B)) : t(s) === "light" ? (a(), e("g", N, E)) : t(s) === "regular" ? (a(), e("g", P, $)) : t(s) === "thin" ? (a(), e("g", j, D)) : u("", !0)
    ], 16, y));
  }
});
export {
  J as default
};
