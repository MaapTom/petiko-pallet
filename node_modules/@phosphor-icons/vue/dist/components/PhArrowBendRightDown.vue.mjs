import { defineComponent as A, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as f, createCommentVNode as v, createElementVNode as n } from "vue";
const w = ["width", "height", "fill", "transform"], k = { key: 0 }, M = /* @__PURE__ */ n("path", { d: "M208.5,184.5l-48,48a12.1,12.1,0,0,1-17,0l-48-48a12,12,0,0,1,17-17L140,195V128A84.1,84.1,0,0,0,56,44a12,12,0,0,1,0-24A108.1,108.1,0,0,1,164,128v67l27.5-27.5a12,12,0,0,1,17,17Z" }, null, -1), V = [
  M
], x = { key: 1 }, S = /* @__PURE__ */ n("path", { d: "M205.7,181.7l-48,48a8.2,8.2,0,0,1-11.4,0l-48-48a8.1,8.1,0,0,1,11.4-11.4L144,204.7V128A88.1,88.1,0,0,0,56,40a8,8,0,0,1,0-16A104.2,104.2,0,0,1,160,128v76.7l34.3-34.4a8.1,8.1,0,0,1,11.4,11.4Z" }, null, -1), Z = [
  S
], z = { key: 2 }, B = /* @__PURE__ */ n("path", { d: "M205.7,181.7l-48,48a8.2,8.2,0,0,1-11.4,0l-48-48a8.4,8.4,0,0,1-1.7-8.8A8,8,0,0,1,104,168h40V128A88.1,88.1,0,0,0,56,40a8,8,0,0,1,0-16A104.2,104.2,0,0,1,160,128v40h40a8,8,0,0,1,7.4,4.9A8.4,8.4,0,0,1,205.7,181.7Z" }, null, -1), C = [
  B
], L = { key: 3 }, N = /* @__PURE__ */ n("path", { d: "M204.2,180.2l-48,48a5.8,5.8,0,0,1-8.4,0l-48-48a5.9,5.9,0,0,1,8.4-8.4L146,209.5V128A90.1,90.1,0,0,0,56,38a6,6,0,0,1,0-12A102.2,102.2,0,0,1,158,128v81.5l37.8-37.7a5.9,5.9,0,0,1,8.4,8.4Z" }, null, -1), b = [
  N
], E = { key: 4 }, P = /* @__PURE__ */ n("path", { d: "M205.7,181.7l-48,48a8.2,8.2,0,0,1-11.4,0l-48-48a8.1,8.1,0,0,1,11.4-11.4L144,204.7V128A88.1,88.1,0,0,0,56,40a8,8,0,0,1,0-16A104.2,104.2,0,0,1,160,128v76.7l34.3-34.4a8.1,8.1,0,0,1,11.4,11.4Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ n("path", { d: "M202.8,178.8l-48,48a3.9,3.9,0,0,1-5.6,0l-48-48a4,4,0,0,1,5.6-5.6L148,214.3V128A92.1,92.1,0,0,0,56,36a4,4,0,0,1,0-8A100.2,100.2,0,0,1,156,128v86.3l41.2-41.1a4,4,0,0,1,5.6,5.6Z" }, null, -1), D = [
  j
], R = {
  name: "PhArrowBendRightDown"
}, G = /* @__PURE__ */ A({
  ...R,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const l = c, h = i("weight", "regular"), _ = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), s = r(() => l.weight ?? h), a = r(() => l.size ?? _), m = r(() => l.color ?? p), u = r(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, q) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(m),
      transform: t(u)
    }, d.$attrs), [
      f(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", k, V)) : t(s) === "duotone" ? (o(), e("g", x, Z)) : t(s) === "fill" ? (o(), e("g", z, C)) : t(s) === "light" ? (o(), e("g", L, b)) : t(s) === "regular" ? (o(), e("g", E, W)) : t(s) === "thin" ? (o(), e("g", $, D)) : v("", !0)
    ], 16, w));
  }
});
export {
  G as default
};
