import { defineComponent as u, inject as r, computed as a, openBlock as e, createElementBlock as s, mergeProps as A, unref as t, renderSlot as Z, createCommentVNode as y, createElementVNode as o } from "vue";
const v = ["width", "height", "fill", "transform"], f = { key: 0 }, V = /* @__PURE__ */ o("path", { d: "M224,60H32A20.1,20.1,0,0,0,12,80v96a20.1,20.1,0,0,0,20,20H224a20.1,20.1,0,0,0,20-20V80A20.1,20.1,0,0,0,224,60Zm-4,112H36V84H220Zm-56-44a16,16,0,1,1,16,16A16,16,0,0,1,164,128Z" }, null, -1), w = [
  V
], k = { key: 1 }, x = /* @__PURE__ */ o("g", { opacity: "0.2" }, [
  /* @__PURE__ */ o("rect", {
    x: "24",
    y: "72",
    width: "208",
    height: "112",
    rx: "8"
  })
], -1), M = /* @__PURE__ */ o("path", { d: "M224,64H32A16,16,0,0,0,16,80v96a16,16,0,0,0,16,16H224a16,16,0,0,0,16-16V80A16,16,0,0,0,224,64Zm0,112H32V80H224v96Zm-24-48a12,12,0,1,1-12-12A12,12,0,0,1,200,128Z" }, null, -1), S = [
  x,
  M
], z = { key: 2 }, C = /* @__PURE__ */ o("path", { d: "M224,64H32A16,16,0,0,0,16,80v96a16,16,0,0,0,16,16H224a16,16,0,0,0,16-16V80A16,16,0,0,0,224,64Zm-36,76a12,12,0,1,1,12-12A12,12,0,0,1,188,140Z" }, null, -1), B = [
  C
], N = { key: 3 }, b = /* @__PURE__ */ o("path", { d: "M224,66H32A14,14,0,0,0,18,80v96a14,14,0,0,0,14,14H224a14,14,0,0,0,14-14V80A14,14,0,0,0,224,66Zm2,110a2,2,0,0,1-2,2H32a2,2,0,0,1-2-2V80a2,2,0,0,1,2-2H224a2,2,0,0,1,2,2Zm-28-48a10,10,0,1,1-10-10A10,10,0,0,1,198,128Z" }, null, -1), E = [
  b
], P = { key: 4 }, W = /* @__PURE__ */ o("path", { d: "M224,64H32A16,16,0,0,0,16,80v96a16,16,0,0,0,16,16H224a16,16,0,0,0,16-16V80A16,16,0,0,0,224,64Zm0,112H32V80H224v96Zm-24-48a12,12,0,1,1-12-12A12,12,0,0,1,200,128Z" }, null, -1), $ = [
  W
], j = { key: 5 }, D = /* @__PURE__ */ o("path", { d: "M224,68H32A12,12,0,0,0,20,80v96a12,12,0,0,0,12,12H224a12,12,0,0,0,12-12V80A12,12,0,0,0,224,68Zm4,108a4,4,0,0,1-4,4H32a4,4,0,0,1-4-4V80a4,4,0,0,1,4-4H224a4,4,0,0,1,4,4Zm-32-48a8,8,0,1,1-8-8A8,8,0,0,1,196,128Z" }, null, -1), q = [
  D
], F = {
  name: "PhHardDrive"
}, J = /* @__PURE__ */ u({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(l) {
    const i = l, _ = r("weight", "regular"), h = r("size", "1em"), m = r("color", "currentColor"), p = r("mirrored", !1), n = a(() => i.weight ?? _), d = a(() => i.size ?? h), g = a(() => i.color ?? m), H = a(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (c, G) => (e(), s("svg", A({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(g),
      transform: t(H)
    }, c.$attrs), [
      Z(c.$slots, "default"),
      t(n) === "bold" ? (e(), s("g", f, w)) : t(n) === "duotone" ? (e(), s("g", k, S)) : t(n) === "fill" ? (e(), s("g", z, B)) : t(n) === "light" ? (e(), s("g", N, E)) : t(n) === "regular" ? (e(), s("g", P, $)) : t(n) === "thin" ? (e(), s("g", j, q)) : y("", !0)
    ], 16, v));
  }
});
export {
  J as default
};
