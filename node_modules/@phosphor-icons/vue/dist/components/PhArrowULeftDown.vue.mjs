import { defineComponent as V, inject as l, computed as r, openBlock as o, createElementBlock as e, mergeProps as f, unref as t, renderSlot as y, createCommentVNode as v, createElementVNode as n } from "vue";
const w = ["width", "height", "fill", "transform"], k = { key: 0 }, M = /* @__PURE__ */ n("path", { d: "M212,88v88a12,12,0,0,1-24,0V88a44,44,0,0,0-88,0V195l27.5-27.5a12,12,0,0,1,17,17l-48,48a12.1,12.1,0,0,1-17,0l-48-48a12,12,0,0,1,17-17L76,195V88a68,68,0,0,1,136,0Z" }, null, -1), x = [
  M
], L = { key: 1 }, S = /* @__PURE__ */ n("path", { d: "M208,88v88a8,8,0,0,1-16,0V88a48,48,0,0,0-96,0V204.7l34.3-34.4a8.1,8.1,0,0,1,11.4,11.4l-48,48a8.2,8.2,0,0,1-11.4,0l-48-48a8.1,8.1,0,0,1,11.4-11.4L80,204.7V88a64,64,0,0,1,128,0Z" }, null, -1), Z = [
  S
], z = { key: 2 }, C = /* @__PURE__ */ n("path", { d: "M208,88v88a8,8,0,0,1-16,0V88a48,48,0,0,0-96,0v80h40a8,8,0,0,1,7.4,4.9,8.4,8.4,0,0,1-1.7,8.8l-48,48a8.2,8.2,0,0,1-11.4,0l-48-48a8.4,8.4,0,0,1-1.7-8.8A8,8,0,0,1,40,168H80V88a64,64,0,0,1,128,0Z" }, null, -1), A = [
  C
], B = { key: 3 }, N = /* @__PURE__ */ n("path", { d: "M206,88v88a6,6,0,0,1-12,0V88A50,50,0,0,0,94,88V209.5l37.8-37.7a5.9,5.9,0,0,1,8.4,8.4l-48,48a5.8,5.8,0,0,1-8.4,0l-48-48a5.9,5.9,0,0,1,8.4-8.4L82,209.5V88a62,62,0,0,1,124,0Z" }, null, -1), b = [
  N
], E = { key: 4 }, P = /* @__PURE__ */ n("path", { d: "M208,88v88a8,8,0,0,1-16,0V88a48,48,0,0,0-96,0V204.7l34.3-34.4a8.1,8.1,0,0,1,11.4,11.4l-48,48a8.2,8.2,0,0,1-11.4,0l-48-48a8.1,8.1,0,0,1,11.4-11.4L80,204.7V88a64,64,0,0,1,128,0Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ n("path", { d: "M204,88v88a4,4,0,0,1-8,0V88A52,52,0,0,0,92,88V214.3l41.2-41.1a4,4,0,0,1,5.6,5.6l-48,48a3.9,3.9,0,0,1-5.6,0l-48-48a4,4,0,0,1,5.6-5.6L84,214.3V88a60,60,0,0,1,120,0Z" }, null, -1), D = [
  j
], H = {
  name: "PhArrowULeftDown"
}, F = /* @__PURE__ */ V({
  ...H,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const a = c, _ = l("weight", "regular"), h = l("size", "1em"), p = l("color", "currentColor"), g = l("mirrored", !1), s = r(() => a.weight ?? _), i = r(() => a.size ?? h), m = r(() => a.color ?? p), u = r(() => a.mirrored !== void 0 ? a.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, U) => (o(), e("svg", f({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(i),
      height: t(i),
      fill: t(m),
      transform: t(u)
    }, d.$attrs), [
      y(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", k, x)) : t(s) === "duotone" ? (o(), e("g", L, Z)) : t(s) === "fill" ? (o(), e("g", z, A)) : t(s) === "light" ? (o(), e("g", B, b)) : t(s) === "regular" ? (o(), e("g", E, W)) : t(s) === "thin" ? (o(), e("g", $, D)) : v("", !0)
    ], 16, w));
  }
});
export {
  F as default
};
