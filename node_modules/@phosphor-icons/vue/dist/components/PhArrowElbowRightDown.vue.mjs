import { defineComponent as y, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as f, unref as t, renderSlot as w, createCommentVNode as V, createElementVNode as n } from "vue";
const H = ["width", "height", "fill", "transform"], k = { key: 0 }, M = /* @__PURE__ */ n("path", { d: "M232.5,168.5l-48,48a12.1,12.1,0,0,1-17,0l-48-48a12,12,0,0,1,17-17L164,179V76H32a12,12,0,0,1,0-24H176a12,12,0,0,1,12,12V179l27.5-27.5a12,12,0,0,1,17,17Z" }, null, -1), v = [
  M
], x = { key: 1 }, S = /* @__PURE__ */ n("path", { d: "M229.7,165.7l-48,48a8.2,8.2,0,0,1-11.4,0l-48-48a8.1,8.1,0,0,1,11.4-11.4L168,188.7V72H32a8,8,0,0,1,0-16H176a8,8,0,0,1,8,8V188.7l34.3-34.4a8.1,8.1,0,0,1,11.4,11.4Z" }, null, -1), Z = [
  S
], z = { key: 2 }, C = /* @__PURE__ */ n("path", { d: "M229.7,165.7l-48,48a8.2,8.2,0,0,1-11.4,0l-48-48a8.4,8.4,0,0,1-1.7-8.8A8,8,0,0,1,128,152h40V72H32a8,8,0,0,1,0-16H176a8,8,0,0,1,8,8v88h40a8,8,0,0,1,7.4,4.9A8.4,8.4,0,0,1,229.7,165.7Z" }, null, -1), L = [
  C
], B = { key: 3 }, b = /* @__PURE__ */ n("path", { d: "M228.2,164.2l-48,48a5.8,5.8,0,0,1-8.4,0l-48-48a5.9,5.9,0,0,1,8.4-8.4L170,193.5V70H32a6,6,0,0,1,0-12H176a6,6,0,0,1,6,6V193.5l37.8-37.7a5.9,5.9,0,0,1,8.4,8.4Z" }, null, -1), A = [
  b
], E = { key: 4 }, N = /* @__PURE__ */ n("path", { d: "M229.7,165.7l-48,48a8.2,8.2,0,0,1-11.4,0l-48-48a8.1,8.1,0,0,1,11.4-11.4L168,188.7V72H32a8,8,0,0,1,0-16H176a8,8,0,0,1,8,8V188.7l34.3-34.4a8.1,8.1,0,0,1,11.4,11.4Z" }, null, -1), P = [
  N
], W = { key: 5 }, $ = /* @__PURE__ */ n("path", { d: "M226.8,162.8l-48,48a3.9,3.9,0,0,1-5.6,0l-48-48a4,4,0,1,1,5.6-5.6L172,198.3V68H32a4,4,0,0,1,0-8H176a4,4,0,0,1,4,4V198.3l41.2-41.1a4,4,0,0,1,5.6,5.6Z" }, null, -1), j = [
  $
], D = {
  name: "PhArrowElbowRightDown"
}, F = /* @__PURE__ */ y({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const l = c, h = i("weight", "regular"), _ = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), s = r(() => l.weight ?? h), a = r(() => l.size ?? _), m = r(() => l.color ?? p), u = r(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, R) => (o(), e("svg", f({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(m),
      transform: t(u)
    }, d.$attrs), [
      w(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", k, v)) : t(s) === "duotone" ? (o(), e("g", x, Z)) : t(s) === "fill" ? (o(), e("g", z, L)) : t(s) === "light" ? (o(), e("g", B, A)) : t(s) === "regular" ? (o(), e("g", E, P)) : t(s) === "thin" ? (o(), e("g", W, j)) : V("", !0)
    ], 16, H));
  }
});
export {
  F as default
};
