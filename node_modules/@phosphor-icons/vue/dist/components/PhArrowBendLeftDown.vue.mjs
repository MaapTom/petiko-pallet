import { defineComponent as f, inject as r, computed as i, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as v, createCommentVNode as w, createElementVNode as n } from "vue";
const k = ["width", "height", "fill", "transform"], A = { key: 0 }, M = /* @__PURE__ */ n("path", { d: "M212,32a12,12,0,0,1-12,12,84.1,84.1,0,0,0-84,84v67l27.5-27.5a12,12,0,0,1,17,17l-48,48a12.1,12.1,0,0,1-17,0l-48-48a12,12,0,0,1,17-17L92,195V128A108.1,108.1,0,0,1,200,20,12,12,0,0,1,212,32Z" }, null, -1), V = [
  M
], x = { key: 1 }, L = /* @__PURE__ */ n("path", { d: "M208,32a8,8,0,0,1-8,8,88.1,88.1,0,0,0-88,88v76.7l34.3-34.4a8.1,8.1,0,0,1,11.4,11.4l-48,48a8.2,8.2,0,0,1-11.4,0l-48-48a8.1,8.1,0,0,1,11.4-11.4L96,204.7V128A104.2,104.2,0,0,1,200,24,8,8,0,0,1,208,32Z" }, null, -1), S = [
  L
], Z = { key: 2 }, z = /* @__PURE__ */ n("path", { d: "M208,32a8,8,0,0,1-8,8,88.1,88.1,0,0,0-88,88v40h40a8,8,0,0,1,7.4,4.9,8.4,8.4,0,0,1-1.7,8.8l-48,48a8.2,8.2,0,0,1-11.4,0l-48-48a8.4,8.4,0,0,1-1.7-8.8A8,8,0,0,1,56,168H96V128A104.2,104.2,0,0,1,200,24,8,8,0,0,1,208,32Z" }, null, -1), B = [
  z
], C = { key: 3 }, N = /* @__PURE__ */ n("path", { d: "M206,32a6,6,0,0,1-6,6,90.1,90.1,0,0,0-90,90v81.5l37.8-37.7a5.9,5.9,0,0,1,8.4,8.4l-48,48a5.8,5.8,0,0,1-8.4,0l-48-48a5.9,5.9,0,0,1,8.4-8.4L98,209.5V128A102.2,102.2,0,0,1,200,26,6,6,0,0,1,206,32Z" }, null, -1), b = [
  N
], E = { key: 4 }, P = /* @__PURE__ */ n("path", { d: "M208,32a8,8,0,0,1-8,8,88.1,88.1,0,0,0-88,88v76.7l34.3-34.4a8.1,8.1,0,0,1,11.4,11.4l-48,48a8.2,8.2,0,0,1-11.4,0l-48-48a8.1,8.1,0,0,1,11.4-11.4L96,204.7V128A104.2,104.2,0,0,1,200,24,8,8,0,0,1,208,32Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ n("path", { d: "M204,32a4,4,0,0,1-4,4,92.1,92.1,0,0,0-92,92v86.3l41.2-41.1a4,4,0,0,1,5.6,5.6l-48,48a3.9,3.9,0,0,1-5.6,0l-48-48a4,4,0,0,1,5.6-5.6L100,214.3V128A100.2,100.2,0,0,1,200,28,4,4,0,0,1,204,32Z" }, null, -1), D = [
  j
], H = {
  name: "PhArrowBendLeftDown"
}, G = /* @__PURE__ */ f({
  ...H,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const l = c, _ = r("weight", "regular"), h = r("size", "1em"), p = r("color", "currentColor"), g = r("mirrored", !1), s = i(() => l.weight ?? _), a = i(() => l.size ?? h), m = i(() => l.color ?? p), u = i(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, q) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(m),
      transform: t(u)
    }, d.$attrs), [
      v(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", A, V)) : t(s) === "duotone" ? (o(), e("g", x, S)) : t(s) === "fill" ? (o(), e("g", Z, B)) : t(s) === "light" ? (o(), e("g", C, b)) : t(s) === "regular" ? (o(), e("g", E, W)) : t(s) === "thin" ? (o(), e("g", $, D)) : w("", !0)
    ], 16, k));
  }
});
export {
  G as default
};
