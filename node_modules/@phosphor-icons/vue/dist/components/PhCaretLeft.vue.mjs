import { defineComponent as y, inject as i, computed as r, openBlock as e, createElementBlock as s, mergeProps as f, unref as t, renderSlot as w, createCommentVNode as M, createElementVNode as o } from "vue";
const k = ["width", "height", "fill", "transform"], A = { key: 0 }, Z = /* @__PURE__ */ o("path", { d: "M160,220a12.2,12.2,0,0,1-8.5-3.5l-80-80a12,12,0,0,1,0-17l80-80a12,12,0,0,1,17,17L97,128l71.5,71.5a12,12,0,0,1,0,17A12.2,12.2,0,0,1,160,220Z" }, null, -1), v = [
  Z
], x = { key: 1 }, C = /* @__PURE__ */ o("g", { opacity: "0.2" }, [
  /* @__PURE__ */ o("polygon", { points: "160 208 80 128 160 48 160 208" })
], -1), S = /* @__PURE__ */ o("path", { d: "M160,216a8.3,8.3,0,0,1-5.7-2.3l-80-80a8.1,8.1,0,0,1,0-11.4l80-80a8.4,8.4,0,0,1,8.8-1.7A8,8,0,0,1,168,48V208a8,8,0,0,1-4.9,7.4A8.5,8.5,0,0,1,160,216ZM91.3,128,152,188.7V67.3Z" }, null, -1), z = [
  C,
  S
], L = { key: 2 }, V = /* @__PURE__ */ o("path", { d: "M168,48V208a8,8,0,0,1-4.9,7.4,8.5,8.5,0,0,1-3.1.6,8.3,8.3,0,0,1-5.7-2.3l-80-80a8.1,8.1,0,0,1,0-11.4l80-80a8.4,8.4,0,0,1,8.8-1.7A8,8,0,0,1,168,48Z" }, null, -1), B = [
  V
], N = { key: 3 }, b = /* @__PURE__ */ o("path", { d: "M160,214a5.8,5.8,0,0,1-4.2-1.8l-80-80a5.8,5.8,0,0,1,0-8.4l80-80a5.9,5.9,0,0,1,8.4,8.4L88.5,128l75.7,75.8A6,6,0,0,1,160,214Z" }, null, -1), E = [
  b
], P = { key: 4 }, W = /* @__PURE__ */ o("path", { d: "M160,216a8.5,8.5,0,0,1-5.7-2.3l-80-80a8.1,8.1,0,0,1,0-11.4l80-80a8.1,8.1,0,0,1,11.4,11.4L91.3,128l74.4,74.3a8.1,8.1,0,0,1,0,11.4A8.5,8.5,0,0,1,160,216Z" }, null, -1), $ = [
  W
], j = { key: 5 }, q = /* @__PURE__ */ o("path", { d: "M160,212a3.9,3.9,0,0,1-2.8-1.2l-80-80a3.9,3.9,0,0,1,0-5.6l80-80a4,4,0,1,1,5.6,5.6L85.7,128l77.1,77.2a3.9,3.9,0,0,1,0,5.6A3.9,3.9,0,0,1,160,212Z" }, null, -1), D = [
  q
], F = {
  name: "PhCaretLeft"
}, I = /* @__PURE__ */ y({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const l = d, _ = i("weight", "regular"), h = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), n = r(() => l.weight ?? _), a = r(() => l.size ?? h), m = r(() => l.color ?? p), u = r(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (c, G) => (e(), s("svg", f({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(m),
      transform: t(u)
    }, c.$attrs), [
      w(c.$slots, "default"),
      t(n) === "bold" ? (e(), s("g", A, v)) : t(n) === "duotone" ? (e(), s("g", x, z)) : t(n) === "fill" ? (e(), s("g", L, B)) : t(n) === "light" ? (e(), s("g", N, E)) : t(n) === "regular" ? (e(), s("g", P, $)) : t(n) === "thin" ? (e(), s("g", j, D)) : M("", !0)
    ], 16, k));
  }
});
export {
  I as default
};
