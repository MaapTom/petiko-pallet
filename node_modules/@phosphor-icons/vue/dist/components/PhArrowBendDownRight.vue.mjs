import { defineComponent as A, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as f, createCommentVNode as w, createElementVNode as n } from "vue";
const k = ["width", "height", "fill", "transform"], M = { key: 0 }, v = /* @__PURE__ */ n("path", { d: "M232.5,160.5l-48,48a12.1,12.1,0,0,1-17,0,12,12,0,0,1,0-17L195,164H128A108.1,108.1,0,0,1,20,56a12,12,0,0,1,24,0,84.1,84.1,0,0,0,84,84h67l-27.5-27.5a12,12,0,0,1,17-17l48,48A12,12,0,0,1,232.5,160.5Z" }, null, -1), x = [
  v
], H = { key: 1 }, S = /* @__PURE__ */ n("path", { d: "M229.7,157.7l-48,48a8.2,8.2,0,0,1-11.4,0,8.1,8.1,0,0,1,0-11.4L204.7,160H128A104.2,104.2,0,0,1,24,56a8,8,0,0,1,16,0,88.1,88.1,0,0,0,88,88h76.7l-34.4-34.3a8.1,8.1,0,0,1,11.4-11.4l48,48A8.1,8.1,0,0,1,229.7,157.7Z" }, null, -1), Z = [
  S
], z = { key: 2 }, B = /* @__PURE__ */ n("path", { d: "M229.7,157.7l-48,48A8.3,8.3,0,0,1,176,208a8.5,8.5,0,0,1-3.1-.6A8,8,0,0,1,168,200V160H128A104.2,104.2,0,0,1,24,56a8,8,0,0,1,16,0,88.1,88.1,0,0,0,88,88h40V104a8,8,0,0,1,4.9-7.4,8.4,8.4,0,0,1,8.8,1.7l48,48A8.1,8.1,0,0,1,229.7,157.7Z" }, null, -1), C = [
  B
], L = { key: 3 }, V = /* @__PURE__ */ n("path", { d: "M228.2,156.2l-48,48a5.9,5.9,0,0,1-8.4-8.4L209.5,158H128A102.2,102.2,0,0,1,26,56a6,6,0,0,1,12,0,90.1,90.1,0,0,0,90,90h81.5l-37.7-37.8a5.9,5.9,0,0,1,8.4-8.4l48,48A5.8,5.8,0,0,1,228.2,156.2Z" }, null, -1), N = [
  V
], b = { key: 4 }, E = /* @__PURE__ */ n("path", { d: "M229.7,157.7l-48,48a8.2,8.2,0,0,1-11.4,0,8.1,8.1,0,0,1,0-11.4L204.7,160H128A104.2,104.2,0,0,1,24,56a8,8,0,0,1,16,0,88.1,88.1,0,0,0,88,88h76.7l-34.4-34.3a8.1,8.1,0,0,1,11.4-11.4l48,48A8.1,8.1,0,0,1,229.7,157.7Z" }, null, -1), P = [
  E
], W = { key: 5 }, $ = /* @__PURE__ */ n("path", { d: "M226.8,154.8l-48,48a3.9,3.9,0,0,1-5.6,0,3.9,3.9,0,0,1,0-5.6L214.3,156H128A100.2,100.2,0,0,1,28,56a4,4,0,0,1,8,0,92.1,92.1,0,0,0,92,92h86.3l-41.1-41.2a4,4,0,0,1,5.6-5.6l48,48A3.9,3.9,0,0,1,226.8,154.8Z" }, null, -1), j = [
  $
], D = {
  name: "PhArrowBendDownRight"
}, F = /* @__PURE__ */ A({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(h) {
    const l = h, a = i("weight", "regular"), _ = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), s = r(() => l.weight ?? a), d = r(() => l.size ?? _), m = r(() => l.color ?? p), u = r(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (c, R) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(m),
      transform: t(u)
    }, c.$attrs), [
      f(c.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", M, x)) : t(s) === "duotone" ? (o(), e("g", H, Z)) : t(s) === "fill" ? (o(), e("g", z, C)) : t(s) === "light" ? (o(), e("g", L, N)) : t(s) === "regular" ? (o(), e("g", b, P)) : t(s) === "thin" ? (o(), e("g", W, j)) : w("", !0)
    ], 16, k));
  }
});
export {
  F as default
};
