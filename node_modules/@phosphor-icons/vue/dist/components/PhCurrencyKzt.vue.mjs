import { defineComponent as m, inject as a, computed as i, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as M, createCommentVNode as V, createElementVNode as n } from "vue";
const f = ["width", "height", "fill", "transform"], Z = { key: 0 }, w = /* @__PURE__ */ n("path", { d: "M212,100a12,12,0,0,1-12,12H140V212a12,12,0,0,1-24,0V112H56a12,12,0,0,1,0-24H200A12,12,0,0,1,212,100ZM56,64H200a12,12,0,0,0,0-24H56a12,12,0,0,0,0,24Z" }, null, -1), k = [
  w
], v = { key: 1 }, x = /* @__PURE__ */ n("path", { d: "M208,96a8,8,0,0,1-8,8H136V216a8,8,0,0,1-16,0V104H56a8,8,0,0,1,0-16H200A8,8,0,0,1,208,96ZM56,64H200a8,8,0,0,0,0-16H56a8,8,0,0,0,0,16Z" }, null, -1), z = [
  x
], A = { key: 2 }, C = /* @__PURE__ */ n("path", { d: "M208,96a8,8,0,0,1-8,8H136V216a8,8,0,0,1-16,0V104H56a8,8,0,0,1,0-16H200A8,8,0,0,1,208,96ZM56,64H200a8,8,0,0,0,0-16H56a8,8,0,0,0,0,16Z" }, null, -1), S = [
  C
], B = { key: 3 }, N = /* @__PURE__ */ n("path", { d: "M206,96a6,6,0,0,1-6,6H134V216a6,6,0,0,1-12,0V102H56a6,6,0,0,1,0-12H200A6,6,0,0,1,206,96ZM56,62H200a6,6,0,0,0,0-12H56a6,6,0,0,0,0,12Z" }, null, -1), b = [
  N
], E = { key: 4 }, P = /* @__PURE__ */ n("path", { d: "M208,96a8,8,0,0,1-8,8H136V216a8,8,0,0,1-16,0V104H56a8,8,0,0,1,0-16H200A8,8,0,0,1,208,96ZM56,64H200a8,8,0,0,0,0-16H56a8,8,0,0,0,0,16Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ n("path", { d: "M204,96a4,4,0,0,1-4,4H132V216a4,4,0,0,1-8,0V100H56a4,4,0,0,1,0-8H200A4,4,0,0,1,204,96ZM56,60H200a4,4,0,0,0,0-8H56a4,4,0,0,0,0,8Z" }, null, -1), K = [
  j
], q = {
  name: "PhCurrencyKzt"
}, G = /* @__PURE__ */ m({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(l) {
    const r = l, _ = a("weight", "regular"), h = a("size", "1em"), H = a("color", "currentColor"), p = a("mirrored", !1), s = i(() => r.weight ?? _), c = i(() => r.size ?? h), g = i(() => r.color ?? H), u = i(() => r.mirrored !== void 0 ? r.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (d, D) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(c),
      height: t(c),
      fill: t(g),
      transform: t(u)
    }, d.$attrs), [
      M(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", Z, k)) : t(s) === "duotone" ? (o(), e("g", v, z)) : t(s) === "fill" ? (o(), e("g", A, S)) : t(s) === "light" ? (o(), e("g", B, b)) : t(s) === "regular" ? (o(), e("g", E, W)) : t(s) === "thin" ? (o(), e("g", $, K)) : V("", !0)
    ], 16, f));
  }
});
export {
  G as default
};
