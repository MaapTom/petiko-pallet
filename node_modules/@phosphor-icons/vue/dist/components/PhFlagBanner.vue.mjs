import { defineComponent as H, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as V, unref as t, renderSlot as y, createCommentVNode as M, createElementVNode as s } from "vue";
const f = ["width", "height", "fill", "transform"], Z = { key: 0 }, w = /* @__PURE__ */ s("path", { d: "M191.4,108l42-52.5A12,12,0,0,0,224,36H40A12,12,0,0,0,28,48V216a12,12,0,0,0,24,0V180H224a12,12,0,0,0,9.4-19.5ZM52,156V60H199l-32.4,40.5a12,12,0,0,0,0,15L199,156Z" }, null, -1), k = [
  w
], v = { key: 1 }, x = /* @__PURE__ */ s("path", {
  d: "M176,108l48,60H40V48H224Z",
  opacity: "0.2"
}, null, -1), A = /* @__PURE__ */ s("path", { d: "M186.2,108l44-55A8,8,0,0,0,224,40H40a8,8,0,0,0-8,8V216a8,8,0,0,0,16,0V176H224a8,8,0,0,0,6.2-13ZM48,160V56H207.4l-37.6,47a7.8,7.8,0,0,0,0,10l37.6,47Z" }, null, -1), S = [
  x,
  A
], z = { key: 2 }, B = /* @__PURE__ */ s("path", { d: "M230.2,163a8,8,0,0,1-6.2,13H48v40a8,8,0,0,1-16,0V48a8,8,0,0,1,8-8H224a8,8,0,0,1,6.2,13l-44,55Z" }, null, -1), C = [
  B
], L = { key: 3 }, N = /* @__PURE__ */ s("path", { d: "M183.7,108l45-56.3A6,6,0,0,0,224,42H40a6,6,0,0,0-6,6V216a6,6,0,0,0,12,0V174H224a6,6,0,0,0,4.7-9.7ZM46,162V54H211.5l-40.2,50.3a6,6,0,0,0,0,7.4L211.5,162Z" }, null, -1), b = [
  N
], E = { key: 4 }, P = /* @__PURE__ */ s("path", { d: "M186.2,108l44-55A8,8,0,0,0,224,40H40a8,8,0,0,0-8,8V216a8,8,0,0,0,16,0V176H224a8,8,0,0,0,6.2-13ZM48,160V56H207.4l-37.6,47a7.8,7.8,0,0,0,0,10l37.6,47Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ s("path", { d: "M181.1,108l46-57.5a3.8,3.8,0,0,0,.5-4.2A4.1,4.1,0,0,0,224,44H40a4,4,0,0,0-4,4V216a4,4,0,0,0,8,0V172H224a4.1,4.1,0,0,0,3.6-2.3,3.8,3.8,0,0,0-.5-4.2ZM44,164V52H215.7l-42.8,53.5a3.9,3.9,0,0,0,0,5L215.7,164Z" }, null, -1), F = [
  j
], q = {
  name: "PhFlagBanner"
}, I = /* @__PURE__ */ H({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const l = c, _ = i("weight", "regular"), h = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), n = r(() => l.weight ?? _), a = r(() => l.size ?? h), u = r(() => l.color ?? p), m = r(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, D) => (o(), e("svg", V({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(u),
      transform: t(m)
    }, d.$attrs), [
      y(d.$slots, "default"),
      t(n) === "bold" ? (o(), e("g", Z, k)) : t(n) === "duotone" ? (o(), e("g", v, S)) : t(n) === "fill" ? (o(), e("g", z, C)) : t(n) === "light" ? (o(), e("g", L, b)) : t(n) === "regular" ? (o(), e("g", E, W)) : t(n) === "thin" ? (o(), e("g", $, F)) : M("", !0)
    ], 16, f));
  }
});
export {
  I as default
};
