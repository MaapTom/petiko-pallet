import { defineComponent as y, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as M, unref as t, renderSlot as f, createCommentVNode as V, createElementVNode as n } from "vue";
const w = ["width", "height", "fill", "transform"], H = { key: 0 }, Z = /* @__PURE__ */ n("path", { d: "M47.5,112.5a12,12,0,0,1,17-17L116,147V32a12,12,0,0,1,24,0V147l51.5-51.5a12,12,0,0,1,17,17l-72,72a12.1,12.1,0,0,1-17,0ZM216,204H40a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24Z" }, null, -1), k = [
  Z
], v = { key: 1 }, x = /* @__PURE__ */ n("path", { d: "M50.3,117.7a8.1,8.1,0,0,1,11.4-11.4L120,164.7V32a8,8,0,0,1,16,0V164.7l58.3-58.4a8.1,8.1,0,0,1,11.4,11.4l-72,72a8.2,8.2,0,0,1-11.4,0ZM216,208H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Z" }, null, -1), L = [
  x
], S = { key: 2 }, z = /* @__PURE__ */ n("path", { d: "M50.3,117.7a8.4,8.4,0,0,1-1.7-8.8A8,8,0,0,1,56,104h64V32a8,8,0,0,1,16,0v72h64a8,8,0,0,1,7.4,4.9,8.4,8.4,0,0,1-1.7,8.8l-72,72a8.2,8.2,0,0,1-11.4,0ZM216,208H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Z" }, null, -1), C = [
  z
], B = { key: 3 }, N = /* @__PURE__ */ n("path", { d: "M51.8,116.2a5.9,5.9,0,0,1,8.4-8.4L122,169.5V32a6,6,0,0,1,12,0V169.5l61.8-61.7a5.9,5.9,0,0,1,8.4,8.4l-72,72a5.8,5.8,0,0,1-8.4,0ZM216,210H40a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12Z" }, null, -1), b = [
  N
], A = { key: 4 }, E = /* @__PURE__ */ n("path", { d: "M50.3,117.7a8.1,8.1,0,0,1,11.4-11.4L120,164.7V32a8,8,0,0,1,16,0V164.7l58.3-58.4a8.1,8.1,0,0,1,11.4,11.4l-72,72a8.2,8.2,0,0,1-11.4,0ZM216,208H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Z" }, null, -1), P = [
  E
], W = { key: 5 }, $ = /* @__PURE__ */ n("path", { d: "M53.2,114.8a4,4,0,0,1,5.6-5.6L124,174.3V32a4,4,0,0,1,8,0V174.3l65.2-65.1a4,4,0,1,1,5.6,5.6l-72,72a3.9,3.9,0,0,1-5.6,0ZM216,212H40a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8Z" }, null, -1), j = [
  $
], D = {
  name: "PhArrowLineDown"
}, G = /* @__PURE__ */ y({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const a = c, _ = i("weight", "regular"), h = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), s = r(() => a.weight ?? _), l = r(() => a.size ?? h), m = r(() => a.color ?? p), u = r(() => a.mirrored !== void 0 ? a.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, q) => (o(), e("svg", M({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(l),
      height: t(l),
      fill: t(m),
      transform: t(u)
    }, d.$attrs), [
      f(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", H, k)) : t(s) === "duotone" ? (o(), e("g", v, L)) : t(s) === "fill" ? (o(), e("g", S, C)) : t(s) === "light" ? (o(), e("g", B, b)) : t(s) === "regular" ? (o(), e("g", A, P)) : t(s) === "thin" ? (o(), e("g", W, j)) : V("", !0)
    ], 16, w));
  }
});
export {
  G as default
};
