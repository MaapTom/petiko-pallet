import { defineComponent as m, inject as i, computed as a, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as M, createCommentVNode as f, createElementVNode as s } from "vue";
const v = ["width", "height", "fill", "transform"], L = { key: 0 }, Z = /* @__PURE__ */ s("path", { d: "M216,164h-5.9L190.3,52H192a12,12,0,0,0,0-24H64a12,12,0,0,0,0,24h1.7L45.9,164H40a12,12,0,0,0,0,24h76v52a12,12,0,0,0,24,0V188h76a12,12,0,0,0,0-24ZM90.1,52h75.8l19.8,112H70.3Z" }, null, -1), w = [
  Z
], k = { key: 1 }, V = /* @__PURE__ */ s("path", {
  d: "M200,176H56L80,40h96Z",
  opacity: "0.2"
}, null, -1), S = /* @__PURE__ */ s("path", { d: "M216,168h-9.3L185.5,48H192a8,8,0,0,0,0-16H64a8,8,0,0,0,0,16h6.5L49.3,168H40a8,8,0,0,0,0,16h80v56a8,8,0,0,0,16,0V184h80a8,8,0,0,0,0-16ZM86.7,48h82.6l21.2,120H65.5Z" }, null, -1), x = [
  V,
  S
], z = { key: 2 }, C = /* @__PURE__ */ s("path", { d: "M224,176a8,8,0,0,1-8,8H136v56a8,8,0,0,1-16,0V184H40a8,8,0,0,1,0-16h9.3L70.5,48H64a8,8,0,0,1,0-16H192a8,8,0,0,1,0,16h-6.5l21.2,120H216A8,8,0,0,1,224,176Z" }, null, -1), B = [
  C
], P = { key: 3 }, N = /* @__PURE__ */ s("path", { d: "M216,170H205L183.2,46H192a6,6,0,0,0,0-12H64a6,6,0,0,0,0,12h8.8L51,170H40a6,6,0,0,0,0,12h82v58a6,6,0,0,0,12,0V182h82a6,6,0,0,0,0-12ZM85,46h86l21.8,124H63.2Z" }, null, -1), b = [
  N
], E = { key: 4 }, W = /* @__PURE__ */ s("path", { d: "M216,168h-9.3L185.5,48H192a8,8,0,0,0,0-16H64a8,8,0,0,0,0,16h6.5L49.3,168H40a8,8,0,0,0,0,16h80v56a8,8,0,0,0,16,0V184h80a8,8,0,0,0,0-16ZM86.7,48h82.6l21.2,120H65.5Z" }, null, -1), $ = [
  W
], j = { key: 5 }, A = /* @__PURE__ */ s("path", { d: "M216,172H203.4L180.8,44H192a4,4,0,0,0,0-8H64a4,4,0,0,0,0,8H75.2L52.6,172H40a4,4,0,0,0,0,8h84v60a4,4,0,0,0,8,0V180h84a4,4,0,0,0,0-8ZM83.4,44h89.2l22.6,128H60.8Z" }, null, -1), q = [
  A
], D = {
  name: "PhPushPinSimple"
}, I = /* @__PURE__ */ m({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const n = d, c = i("weight", "regular"), _ = i("size", "1em"), p = i("color", "currentColor"), H = i("mirrored", !1), h = a(() => n.weight ?? c), r = a(() => n.size ?? _), g = a(() => n.color ?? p), u = a(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : H ? "scale(-1, 1)" : void 0);
    return (l, F) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(r),
      height: t(r),
      fill: t(g),
      transform: t(u)
    }, l.$attrs), [
      M(l.$slots, "default"),
      t(h) === "bold" ? (o(), e("g", L, w)) : t(h) === "duotone" ? (o(), e("g", k, x)) : t(h) === "fill" ? (o(), e("g", z, B)) : t(h) === "light" ? (o(), e("g", P, b)) : t(h) === "regular" ? (o(), e("g", E, $)) : t(h) === "thin" ? (o(), e("g", j, q)) : f("", !0)
    ], 16, v));
  }
});
export {
  I as default
};
