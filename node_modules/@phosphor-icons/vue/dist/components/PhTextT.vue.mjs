import { defineComponent as m, inject as a, computed as r, openBlock as o, createElementBlock as e, mergeProps as u, unref as t, renderSlot as y, createCommentVNode as f, createElementVNode as n } from "vue";
const w = ["width", "height", "fill", "transform"], k = { key: 0 }, M = /* @__PURE__ */ n("path", { d: "M220,56V88a12,12,0,0,1-24,0V68H140V188h20a12,12,0,0,1,0,24H96a12,12,0,0,1,0-24h20V68H60V88a12,12,0,0,1-24,0V56A12,12,0,0,1,48,44H208A12,12,0,0,1,220,56Z" }, null, -1), x = [
  M
], A = { key: 1 }, v = /* @__PURE__ */ n("path", { d: "M216,56V88a8,8,0,0,1-16,0V64H136V192h24a8,8,0,0,1,0,16H96a8,8,0,0,1,0-16h24V64H56V88a8,8,0,0,1-16,0V56a8,8,0,0,1,8-8H208A8,8,0,0,1,216,56Z" }, null, -1), S = [
  v
], Z = { key: 2 }, z = /* @__PURE__ */ n("path", { d: "M216,56V88a8,8,0,0,1-16,0V64H136V192h24a8,8,0,0,1,0,16H96a8,8,0,0,1,0-16h24V64H56V88a8,8,0,0,1-16,0V56a8,8,0,0,1,8-8H208A8,8,0,0,1,216,56Z" }, null, -1), C = [
  z
], B = { key: 3 }, N = /* @__PURE__ */ n("path", { d: "M214,56V88a6,6,0,0,1-12,0V62H134V194h26a6,6,0,0,1,0,12H96a6,6,0,0,1,0-12h26V62H54V88a6,6,0,0,1-12,0V56a6,6,0,0,1,6-6H208A6,6,0,0,1,214,56Z" }, null, -1), b = [
  N
], E = { key: 4 }, P = /* @__PURE__ */ n("path", { d: "M216,56V88a8,8,0,0,1-16,0V64H136V192h24a8,8,0,0,1,0,16H96a8,8,0,0,1,0-16h24V64H56V88a8,8,0,0,1-16,0V56a8,8,0,0,1,8-8H208A8,8,0,0,1,216,56Z" }, null, -1), T = [
  P
], W = { key: 5 }, $ = /* @__PURE__ */ n("path", { d: "M212,56V88a4,4,0,0,1-8,0V60H132V196h28a4,4,0,0,1,0,8H96a4,4,0,0,1,0-8h28V60H52V88a4,4,0,0,1-8,0V56a4,4,0,0,1,4-4H208A4,4,0,0,1,212,56Z" }, null, -1), j = [
  $
], q = {
  name: "PhTextT"
}, G = /* @__PURE__ */ m({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const i = c, l = a("weight", "regular"), _ = a("size", "1em"), V = a("color", "currentColor"), p = a("mirrored", !1), s = r(() => i.weight ?? l), h = r(() => i.size ?? _), H = r(() => i.color ?? V), g = r(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (d, D) => (o(), e("svg", u({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(h),
      height: t(h),
      fill: t(H),
      transform: t(g)
    }, d.$attrs), [
      y(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", k, x)) : t(s) === "duotone" ? (o(), e("g", A, S)) : t(s) === "fill" ? (o(), e("g", Z, C)) : t(s) === "light" ? (o(), e("g", B, b)) : t(s) === "regular" ? (o(), e("g", E, T)) : t(s) === "thin" ? (o(), e("g", W, j)) : f("", !0)
    ], 16, w));
  }
});
export {
  G as default
};
