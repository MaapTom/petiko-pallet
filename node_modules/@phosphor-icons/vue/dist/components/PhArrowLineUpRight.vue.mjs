import { defineComponent as u, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as M, createCommentVNode as f, createElementVNode as a } from "vue";
const L = ["width", "height", "fill", "transform"], V = { key: 0 }, Z = /* @__PURE__ */ a("path", { d: "M71.5,176.5a12,12,0,0,1,0-17L163,68H92a12,12,0,0,1,0-24H192a12,12,0,0,1,12,12V156a12,12,0,0,1-24,0V85L88.5,176.5a12.1,12.1,0,0,1-17,0ZM216,204H40a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24Z" }, null, -1), w = [
  Z
], k = { key: 1 }, v = /* @__PURE__ */ a("path", { d: "M74.3,173.7a8.1,8.1,0,0,1,0-11.4L172.7,64H92a8,8,0,0,1,0-16H192a8,8,0,0,1,8,8V156a8,8,0,0,1-16,0V75.3L85.7,173.7a8.2,8.2,0,0,1-11.4,0ZM216,208H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Z" }, null, -1), x = [
  v
], S = { key: 2 }, z = /* @__PURE__ */ a("path", { d: "M74.3,173.7a8.1,8.1,0,0,1,0-11.4L130.7,106,86.3,61.7a8.4,8.4,0,0,1-1.7-8.8A8,8,0,0,1,92,48H192a8,8,0,0,1,8,8V156a8,8,0,0,1-4.9,7.4,8.5,8.5,0,0,1-3.1.6,8.3,8.3,0,0,1-5.7-2.3L142,117.3,85.7,173.7a8.2,8.2,0,0,1-11.4,0ZM216,208H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Z" }, null, -1), C = [
  z
], B = { key: 3 }, N = /* @__PURE__ */ a("path", { d: "M75.8,172.2a5.8,5.8,0,0,1,0-8.4L177.5,62H92a6,6,0,0,1,0-12H192a6,6,0,0,1,6,6V156a6,6,0,0,1-12,0V70.5L84.2,172.2a5.8,5.8,0,0,1-8.4,0ZM216,210H40a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12Z" }, null, -1), b = [
  N
], A = { key: 4 }, E = /* @__PURE__ */ a("path", { d: "M74.3,173.7a8.1,8.1,0,0,1,0-11.4L172.7,64H92a8,8,0,0,1,0-16H192a8,8,0,0,1,8,8V156a8,8,0,0,1-16,0V75.3L85.7,173.7a8.2,8.2,0,0,1-11.4,0ZM216,208H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Z" }, null, -1), P = [
  E
], W = { key: 5 }, $ = /* @__PURE__ */ a("path", { d: "M77.2,170.8a3.9,3.9,0,0,1,0-5.6L182.3,60H92a4,4,0,0,1,0-8H192a4,4,0,0,1,4,4V156a4,4,0,0,1-8,0V65.7L82.8,170.8a3.9,3.9,0,0,1-5.6,0ZM216,212H40a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8Z" }, null, -1), j = [
  $
], R = {
  name: "PhArrowLineUpRight"
}, D = /* @__PURE__ */ u({
  ...R,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(l) {
    const n = l, _ = i("weight", "regular"), h = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), s = r(() => n.weight ?? _), d = r(() => n.size ?? h), H = r(() => n.color ?? p), m = r(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (c, U) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(H),
      transform: t(m)
    }, c.$attrs), [
      M(c.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", V, w)) : t(s) === "duotone" ? (o(), e("g", k, x)) : t(s) === "fill" ? (o(), e("g", S, C)) : t(s) === "light" ? (o(), e("g", B, b)) : t(s) === "regular" ? (o(), e("g", A, P)) : t(s) === "thin" ? (o(), e("g", W, j)) : f("", !0)
    ], 16, L));
  }
});
export {
  D as default
};
