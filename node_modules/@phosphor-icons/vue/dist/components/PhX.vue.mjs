import { defineComponent as u, inject as r, computed as l, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as f, createCommentVNode as w, createElementVNode as n } from "vue";
const k = ["width", "height", "fill", "transform"], M = { key: 0 }, v = /* @__PURE__ */ n("path", { d: "M208.5,191.5a12,12,0,0,1,0,17,12.1,12.1,0,0,1-17,0L128,145,64.5,208.5a12.1,12.1,0,0,1-17,0,12,12,0,0,1,0-17L111,128,47.5,64.5a12,12,0,0,1,17-17L128,111l63.5-63.5a12,12,0,0,1,17,17L145,128Z" }, null, -1), x = [
  v
], S = { key: 1 }, Z = /* @__PURE__ */ n("path", { d: "M205.7,194.3a8.1,8.1,0,0,1,0,11.4,8.2,8.2,0,0,1-11.4,0L128,139.3,61.7,205.7a8.2,8.2,0,0,1-11.4,0,8.1,8.1,0,0,1,0-11.4L116.7,128,50.3,61.7A8.1,8.1,0,0,1,61.7,50.3L128,116.7l66.3-66.4a8.1,8.1,0,0,1,11.4,11.4L139.3,128Z" }, null, -1), z = [
  Z
], C = { key: 2 }, B = /* @__PURE__ */ n("path", { d: "M205.7,194.3a8.1,8.1,0,0,1,0,11.4,8.2,8.2,0,0,1-11.4,0L128,139.3,61.7,205.7a8.2,8.2,0,0,1-11.4,0,8.1,8.1,0,0,1,0-11.4L116.7,128,50.3,61.7A8.1,8.1,0,0,1,61.7,50.3L128,116.7l66.3-66.4a8.1,8.1,0,0,1,11.4,11.4L139.3,128Z" }, null, -1), A = [
  B
], N = { key: 3 }, b = /* @__PURE__ */ n("path", { d: "M204.2,195.8a5.9,5.9,0,1,1-8.4,8.4L128,136.5,60.2,204.2a5.9,5.9,0,0,1-8.4-8.4L119.5,128,51.8,60.2a5.9,5.9,0,0,1,8.4-8.4L128,119.5l67.8-67.7a5.9,5.9,0,0,1,8.4,8.4L136.5,128Z" }, null, -1), E = [
  b
], P = { key: 4 }, V = /* @__PURE__ */ n("path", { d: "M205.7,194.3a8.1,8.1,0,0,1,0,11.4,8.2,8.2,0,0,1-11.4,0L128,139.3,61.7,205.7a8.2,8.2,0,0,1-11.4,0,8.1,8.1,0,0,1,0-11.4L116.7,128,50.3,61.7A8.1,8.1,0,0,1,61.7,50.3L128,116.7l66.3-66.4a8.1,8.1,0,0,1,11.4,11.4L139.3,128Z" }, null, -1), W = [
  V
], $ = { key: 5 }, j = /* @__PURE__ */ n("path", { d: "M202.8,197.2a3.9,3.9,0,0,1,0,5.6,3.9,3.9,0,0,1-5.6,0L128,133.7,58.8,202.8a3.9,3.9,0,0,1-5.6,0,3.9,3.9,0,0,1,0-5.6L122.3,128,53.2,58.8a4,4,0,0,1,5.6-5.6L128,122.3l69.2-69.1a4,4,0,1,1,5.6,5.6L133.7,128Z" }, null, -1), X = [
  j
], q = {
  name: "PhX"
}, G = /* @__PURE__ */ u({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const i = c, _ = r("weight", "regular"), h = r("size", "1em"), p = r("color", "currentColor"), L = r("mirrored", !1), s = l(() => i.weight ?? _), a = l(() => i.size ?? h), g = l(() => i.color ?? p), m = l(() => i.mirrored !== void 0 ? i.mirrored ? "scale(-1, 1)" : void 0 : L ? "scale(-1, 1)" : void 0);
    return (d, D) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(g),
      transform: t(m)
    }, d.$attrs), [
      f(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", M, x)) : t(s) === "duotone" ? (o(), e("g", S, z)) : t(s) === "fill" ? (o(), e("g", C, A)) : t(s) === "light" ? (o(), e("g", N, E)) : t(s) === "regular" ? (o(), e("g", P, W)) : t(s) === "thin" ? (o(), e("g", $, X)) : w("", !0)
    ], 16, k));
  }
});
export {
  G as default
};
