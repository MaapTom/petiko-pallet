import { defineComponent as V, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as f, createCommentVNode as w, createElementVNode as n } from "vue";
const H = ["width", "height", "fill", "transform"], A = { key: 0 }, k = /* @__PURE__ */ n("path", { d: "M216.5,184.5l-48,48a12.1,12.1,0,0,1-17,0,12,12,0,0,1,0-17L179,188H64a12,12,0,0,1-12-12V32a12,12,0,0,1,24,0V164H179l-27.5-27.5a12,12,0,0,1,17-17l48,48A12,12,0,0,1,216.5,184.5Z" }, null, -1), M = [
  k
], v = { key: 1 }, x = /* @__PURE__ */ n("path", { d: "M213.7,181.7l-48,48a8.2,8.2,0,0,1-11.4,0,8.1,8.1,0,0,1,0-11.4L188.7,184H64a8,8,0,0,1-8-8V32a8,8,0,0,1,16,0V168H188.7l-34.4-34.3a8.1,8.1,0,0,1,11.4-11.4l48,48A8.1,8.1,0,0,1,213.7,181.7Z" }, null, -1), S = [
  x
], Z = { key: 2 }, z = /* @__PURE__ */ n("path", { d: "M213.7,181.7l-48,48A8.3,8.3,0,0,1,160,232a8.5,8.5,0,0,1-3.1-.6A8,8,0,0,1,152,224V184H64a8,8,0,0,1-8-8V32a8,8,0,0,1,16,0V168h80V128a8,8,0,0,1,4.9-7.4,8.4,8.4,0,0,1,8.8,1.7l48,48A8.1,8.1,0,0,1,213.7,181.7Z" }, null, -1), C = [
  z
], L = { key: 3 }, B = /* @__PURE__ */ n("path", { d: "M212.2,180.2l-48,48a5.9,5.9,0,0,1-8.4-8.4L193.5,182H64a6,6,0,0,1-6-6V32a6,6,0,0,1,12,0V170H193.5l-37.7-37.8a5.9,5.9,0,0,1,8.4-8.4l48,48A5.8,5.8,0,0,1,212.2,180.2Z" }, null, -1), b = [
  B
], E = { key: 4 }, N = /* @__PURE__ */ n("path", { d: "M213.7,181.7l-48,48a8.2,8.2,0,0,1-11.4,0,8.1,8.1,0,0,1,0-11.4L188.7,184H64a8,8,0,0,1-8-8V32a8,8,0,0,1,16,0V168H188.7l-34.4-34.3a8.1,8.1,0,0,1,11.4-11.4l48,48A8.1,8.1,0,0,1,213.7,181.7Z" }, null, -1), P = [
  N
], W = { key: 5 }, $ = /* @__PURE__ */ n("path", { d: "M210.8,178.8l-48,48a3.9,3.9,0,0,1-5.6,0,3.9,3.9,0,0,1,0-5.6L198.3,180H64a4,4,0,0,1-4-4V32a4,4,0,0,1,8,0V172H198.3l-41.1-41.2a4,4,0,1,1,5.6-5.6l48,48A3.9,3.9,0,0,1,210.8,178.8Z" }, null, -1), j = [
  $
], D = {
  name: "PhArrowElbowDownRight"
}, F = /* @__PURE__ */ V({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const l = c, _ = i("weight", "regular"), h = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), s = r(() => l.weight ?? _), a = r(() => l.size ?? h), m = r(() => l.color ?? p), u = r(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, R) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(m),
      transform: t(u)
    }, d.$attrs), [
      f(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", A, M)) : t(s) === "duotone" ? (o(), e("g", v, S)) : t(s) === "fill" ? (o(), e("g", Z, C)) : t(s) === "light" ? (o(), e("g", L, b)) : t(s) === "regular" ? (o(), e("g", E, P)) : t(s) === "thin" ? (o(), e("g", W, j)) : w("", !0)
    ], 16, H));
  }
});
export {
  F as default
};
