import { defineComponent as V, inject as i, computed as r, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as f, createCommentVNode as w, createElementVNode as s } from "vue";
const M = ["width", "height", "fill", "transform"], k = { key: 0 }, A = /* @__PURE__ */ s("path", { d: "M238.3,138.2l-104,64A11.8,11.8,0,0,1,128,204a12.6,12.6,0,0,1-5.9-1.5A12.2,12.2,0,0,1,116,192V85.5L30.3,138.2a12,12,0,0,1-12.6-20.4l104-64A11.9,11.9,0,0,1,140,64V170.5l85.7-52.7a12,12,0,0,1,12.6,20.4Z" }, null, -1), Z = [
  A
], v = { key: 1 }, S = /* @__PURE__ */ s("path", {
  d: "M128,192V128H232ZM24,128H128V64Z",
  opacity: "0.2"
}, null, -1), x = /* @__PURE__ */ s("path", { d: "M236.2,134.8l-104,64a8,8,0,0,1-8.1.2,8.1,8.1,0,0,1-4.1-7V78.3L28.2,134.8a8,8,0,0,1-8.4-13.6l104-64A8,8,0,0,1,136,64V177.7l91.8-56.5a8,8,0,0,1,8.4,13.6Z" }, null, -1), L = [
  S,
  x
], z = { key: 2 }, C = /* @__PURE__ */ s("path", { d: "M236.2,134.8l-104,64a8,8,0,0,1-8.1.2,8.1,8.1,0,0,1-4.1-7V78.3L28.2,134.8a8,8,0,0,1-8.4-13.6l104-64A8,8,0,0,1,136,64V177.7l91.8-56.5a8,8,0,0,1,8.4,13.6Z" }, null, -1), B = [
  C
], N = { key: 3 }, W = /* @__PURE__ */ s("path", { d: "M235.1,133.1l-104,64a5.6,5.6,0,0,1-3.1.9,6,6,0,0,1-2.9-.8A5.9,5.9,0,0,1,122,192V74.7L27.1,133.1a6,6,0,1,1-6.2-10.2l104-64A6,6,0,0,1,134,64V181.3l94.9-58.4a6,6,0,1,1,6.2,10.2Z" }, null, -1), b = [
  W
], E = { key: 4 }, H = /* @__PURE__ */ s("path", { d: "M236.2,134.8l-104,64a8,8,0,0,1-8.1.2,8.1,8.1,0,0,1-4.1-7V78.3L28.2,134.8a8,8,0,0,1-8.4-13.6l104-64A8,8,0,0,1,136,64V177.7l91.8-56.5a8,8,0,0,1,8.4,13.6Z" }, null, -1), P = [
  H
], $ = { key: 5 }, j = /* @__PURE__ */ s("path", { d: "M234.1,131.4l-104,64a3.9,3.9,0,0,1-2.1.6,4.9,4.9,0,0,1-2-.5,4.2,4.2,0,0,1-2-3.5V71.2L26.1,131.4a4,4,0,0,1-4.2-6.8l104-64a4,4,0,0,1,4.1-.1,4.2,4.2,0,0,1,2,3.5V184.8l97.9-60.2a4,4,0,0,1,4.2,6.8Z" }, null, -1), q = [
  j
], D = {
  name: "PhWaveSawtooth"
}, I = /* @__PURE__ */ V({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const n = c, _ = i("weight", "regular"), h = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), l = r(() => n.weight ?? _), a = r(() => n.size ?? h), u = r(() => n.color ?? p), m = r(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, F) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(a),
      height: t(a),
      fill: t(u),
      transform: t(m)
    }, d.$attrs), [
      f(d.$slots, "default"),
      t(l) === "bold" ? (o(), e("g", k, Z)) : t(l) === "duotone" ? (o(), e("g", v, L)) : t(l) === "fill" ? (o(), e("g", z, B)) : t(l) === "light" ? (o(), e("g", N, b)) : t(l) === "regular" ? (o(), e("g", E, P)) : t(l) === "thin" ? (o(), e("g", $, q)) : w("", !0)
    ], 16, M));
  }
});
export {
  I as default
};
