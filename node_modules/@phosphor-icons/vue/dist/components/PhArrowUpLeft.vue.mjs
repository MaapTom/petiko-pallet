import { defineComponent as f, inject as i, computed as a, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as L, createCommentVNode as V, createElementVNode as n } from "vue";
const w = ["width", "height", "fill", "transform"], H = { key: 0 }, A = /* @__PURE__ */ n("path", { d: "M200.5,200.5a12.1,12.1,0,0,1-17,0L76,93v75a12,12,0,0,1-24,0V64A12,12,0,0,1,64,52H168a12,12,0,0,1,0,24H93L200.5,183.5A12,12,0,0,1,200.5,200.5Z" }, null, -1), k = [
  A
], M = { key: 1 }, v = /* @__PURE__ */ n("path", { d: "M197.7,197.7a8.2,8.2,0,0,1-11.4,0L72,83.3V168a8,8,0,0,1-16,0V64a8,8,0,0,1,8-8H168a8,8,0,0,1,0,16H83.3L197.7,186.3A8.1,8.1,0,0,1,197.7,197.7Z" }, null, -1), x = [
  v
], S = { key: 2 }, Z = /* @__PURE__ */ n("path", { d: "M197.7,197.7a8.2,8.2,0,0,1-11.4,0L116,127.3,69.7,173.7A8.3,8.3,0,0,1,64,176a8.5,8.5,0,0,1-3.1-.6A8,8,0,0,1,56,168V64a8,8,0,0,1,8-8H168a8,8,0,0,1,7.4,4.9,8.4,8.4,0,0,1-1.7,8.8L127.3,116l70.4,70.3A8.1,8.1,0,0,1,197.7,197.7Z" }, null, -1), z = [
  Z
], C = { key: 3 }, B = /* @__PURE__ */ n("path", { d: "M196.2,196.2a5.8,5.8,0,0,1-8.4,0L70,78.5V168a6,6,0,0,1-12,0V64a6,6,0,0,1,6-6H168a6,6,0,0,1,0,12H78.5L196.2,187.8A5.8,5.8,0,0,1,196.2,196.2Z" }, null, -1), N = [
  B
], b = { key: 4 }, E = /* @__PURE__ */ n("path", { d: "M197.7,197.7a8.2,8.2,0,0,1-11.4,0L72,83.3V168a8,8,0,0,1-16,0V64a8,8,0,0,1,8-8H168a8,8,0,0,1,0,16H83.3L197.7,186.3A8.1,8.1,0,0,1,197.7,197.7Z" }, null, -1), P = [
  E
], W = { key: 5 }, $ = /* @__PURE__ */ n("path", { d: "M194.8,194.8a3.9,3.9,0,0,1-5.6,0L68,73.7V168a4,4,0,0,1-8,0V64a4,4,0,0,1,4-4H168a4,4,0,0,1,0,8H73.7L194.8,189.2A3.9,3.9,0,0,1,194.8,194.8Z" }, null, -1), j = [
  $
], U = {
  name: "PhArrowUpLeft"
}, F = /* @__PURE__ */ f({
  ...U,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(l) {
    const r = l, _ = i("weight", "regular"), h = i("size", "1em"), p = i("color", "currentColor"), g = i("mirrored", !1), s = a(() => r.weight ?? _), d = a(() => r.size ?? h), m = a(() => r.color ?? p), u = a(() => r.mirrored !== void 0 ? r.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (c, q) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(d),
      height: t(d),
      fill: t(m),
      transform: t(u)
    }, c.$attrs), [
      L(c.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", H, k)) : t(s) === "duotone" ? (o(), e("g", M, x)) : t(s) === "fill" ? (o(), e("g", S, z)) : t(s) === "light" ? (o(), e("g", C, N)) : t(s) === "regular" ? (o(), e("g", b, P)) : t(s) === "thin" ? (o(), e("g", W, j)) : V("", !0)
    ], 16, w));
  }
});
export {
  F as default
};
