import { defineComponent as f, inject as r, computed as a, openBlock as o, createElementBlock as e, mergeProps as y, unref as t, renderSlot as V, createCommentVNode as w, createElementVNode as n } from "vue";
const H = ["width", "height", "fill", "transform"], k = { key: 0 }, v = /* @__PURE__ */ n("path", { d: "M204,32V176a12,12,0,0,1-12,12H77l27.5,27.5a12,12,0,0,1,0,17,12.1,12.1,0,0,1-17,0l-48-48a12,12,0,0,1,0-17l48-48a12,12,0,0,1,17,17L77,164H180V32a12,12,0,0,1,24,0Z" }, null, -1), M = [
  v
], x = { key: 1 }, L = /* @__PURE__ */ n("path", { d: "M200,32V176a8,8,0,0,1-8,8H67.3l34.4,34.3a8.1,8.1,0,0,1,0,11.4,8.2,8.2,0,0,1-11.4,0l-48-48a8.1,8.1,0,0,1,0-11.4l48-48a8.1,8.1,0,0,1,11.4,11.4L67.3,168H184V32a8,8,0,0,1,16,0Z" }, null, -1), S = [
  L
], Z = { key: 2 }, z = /* @__PURE__ */ n("path", { d: "M200,32V176a8,8,0,0,1-8,8H104v40a8,8,0,0,1-4.9,7.4,8.5,8.5,0,0,1-3.1.6,8.3,8.3,0,0,1-5.7-2.3l-48-48a8.1,8.1,0,0,1,0-11.4l48-48a8.4,8.4,0,0,1,8.8-1.7A8,8,0,0,1,104,128v40h80V32a8,8,0,0,1,16,0Z" }, null, -1), C = [
  z
], B = { key: 3 }, b = /* @__PURE__ */ n("path", { d: "M198,32V176a6,6,0,0,1-6,6H62.5l37.7,37.8a5.9,5.9,0,1,1-8.4,8.4l-48-48a5.8,5.8,0,0,1,0-8.4l48-48a5.9,5.9,0,0,1,8.4,8.4L62.5,170H186V32a6,6,0,0,1,12,0Z" }, null, -1), E = [
  b
], N = { key: 4 }, A = /* @__PURE__ */ n("path", { d: "M200,32V176a8,8,0,0,1-8,8H67.3l34.4,34.3a8.1,8.1,0,0,1,0,11.4,8.2,8.2,0,0,1-11.4,0l-48-48a8.1,8.1,0,0,1,0-11.4l48-48a8.1,8.1,0,0,1,11.4,11.4L67.3,168H184V32a8,8,0,0,1,16,0Z" }, null, -1), P = [
  A
], W = { key: 5 }, $ = /* @__PURE__ */ n("path", { d: "M196,32V176a4,4,0,0,1-4,4H57.7l41.1,41.2a3.9,3.9,0,0,1,0,5.6,3.9,3.9,0,0,1-5.6,0l-48-48a3.9,3.9,0,0,1,0-5.6l48-48a4,4,0,1,1,5.6,5.6L57.7,172H188V32a4,4,0,0,1,8,0Z" }, null, -1), j = [
  $
], D = {
  name: "PhArrowElbowDownLeft"
}, G = /* @__PURE__ */ f({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const l = c, _ = r("weight", "regular"), h = r("size", "1em"), p = r("color", "currentColor"), g = r("mirrored", !1), s = a(() => l.weight ?? _), i = a(() => l.size ?? h), m = a(() => l.color ?? p), u = a(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : g ? "scale(-1, 1)" : void 0);
    return (d, q) => (o(), e("svg", y({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: t(i),
      height: t(i),
      fill: t(m),
      transform: t(u)
    }, d.$attrs), [
      V(d.$slots, "default"),
      t(s) === "bold" ? (o(), e("g", k, M)) : t(s) === "duotone" ? (o(), e("g", x, S)) : t(s) === "fill" ? (o(), e("g", Z, C)) : t(s) === "light" ? (o(), e("g", B, E)) : t(s) === "regular" ? (o(), e("g", N, P)) : t(s) === "thin" ? (o(), e("g", W, j)) : w("", !0)
    ], 16, H));
  }
});
export {
  G as default
};
